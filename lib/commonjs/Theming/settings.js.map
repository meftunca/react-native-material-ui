{"version":3,"sources":["settings.tsx"],"names":["DefaultSettings","setAlert","undefined","setSnacbar","SettingsContext","React","createContext","Provider","children","useState","header","prompt","contentText","action","isOpen","alertData","setAlertData","label","color","backgroundColor","elevation","snackbarData","setSnackbarData","onToggleAlert","status","onToggleSnackbar","newSnacbar","newAlert","value","useMemo","isOpenSnacbar","useAlert","useContext","onDismiss","onOpen","useSnackbar","onToggle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {TextProps} from '../Components/Core/Typography';\nimport Alert from '../Components/PopUp/Alert';\nimport Snackbar from '../Components/PopUp/Snackbar';\n\ntype ActionType = {\n  color?: string;\n  label?: string;\n  accessibilityLabel?: string;\n  onPress?: () => void;\n};\n\ntype AlertType = {\n  header?: {\n    title?: string;\n    subtitle?: string;\n    titleProps?: TextProps;\n    subtitleProps?: TextProps;\n  };\n  prompt?: boolean;\n  contentText?: string;\n  action?: ActionType[];\n  isOpen?: boolean;\n};\ntype SnackbarType = {\n  label: string;\n  color?: string;\n  //   avatar?:AvatarType;\n  backgroundColor?: string;\n  elevation?: number;\n  action?: ActionType | undefined;\n  isOpen?: boolean;\n};\nexport type Settings = {\n  children?: React.ReactNode;\n  onToggleAlert?: (status: boolean) => void | undefined;\n  onToggleSnackbar?: (status: boolean) => void | undefined;\n  setAlert: (data: AlertType) => void | undefined;\n  setSnacbar: (data: SnackbarType) => void | undefined;\n  isOpenSnacbar?: number;\n};\nconst DefaultSettings = {\n  setAlert: undefined,\n  setSnacbar: undefined,\n};\nconst SettingsContext = React.createContext<Settings>(DefaultSettings);\n\nexport const Provider: React.FC<{value?: Settings}> = ({children}) => {\n  const [alertData, setAlertData] = React.useState<AlertType>({\n    header: undefined,\n    prompt: false,\n    contentText: '',\n    action: undefined,\n    isOpen: false,\n  });\n  const [snackbarData, setSnackbarData] = React.useState<SnackbarType>({\n    label: 'Label',\n    color: undefined,\n    backgroundColor: undefined,\n    elevation: 4,\n    action: undefined,\n    isOpen: false,\n  });\n  const onToggleAlert = (status: boolean) =>\n    setAlertData({...alertData, isOpen: status});\n  const onToggleSnackbar = (status: boolean = !snackbarData.isOpen) =>\n    setSnackbarData({...snackbarData, isOpen: status});\n  const setSnacbar = (newSnacbar: SnackbarType) =>\n    setSnackbarData(Object.assign(snackbarData, newSnacbar));\n  const setAlert = (newAlert: AlertType) =>\n    setAlertData(Object.assign(alertData, newAlert));\n\n  const value: any = React.useMemo(() => {\n    return {\n      isOpenSnacbar: snackbarData.isOpen,\n      setSnacbar,\n      onToggleAlert,\n      onToggleSnackbar,\n      setAlert,\n    };\n  }, [setSnacbar || setAlert]);\n  return (\n    <SettingsContext.Provider value={value}>\n      <>\n        {children}\n        {alertData && (\n          <Alert {...alertData} onDismiss={() => onToggleAlert(false)} />\n        )}\n        {snackbarData && (\n          <Snackbar\n            {...snackbarData}\n            onDismiss={() => onToggleSnackbar(false)}\n          />\n        )}\n      </>\n    </SettingsContext.Provider>\n  );\n};\nexport const useAlert = () => {\n  const {setAlert, onToggleAlert} = React.useContext(SettingsContext);\n  return {\n    setAlert,\n    onDismiss: () => onToggleAlert(false),\n    onOpen: () => onToggleAlert(true),\n  };\n};\nexport const useSnackbar = () => {\n  const {setSnacbar, onToggleSnackbar, isOpenSnacbar} = React.useContext(\n    SettingsContext,\n  );\n  return {\n    setSnacbar,\n    isOpen: isOpenSnacbar,\n    onDismiss: () => onToggleSnackbar(false),\n    onOpen: () => onToggleSnackbar(true),\n    onToggle: onToggleSnackbar,\n  };\n};\n"]}
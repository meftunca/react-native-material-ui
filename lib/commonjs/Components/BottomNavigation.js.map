{"version":3,"sources":["BottomNavigation.tsx"],"names":["SafeAreaView","Platform","OS","View","SafeAreaViews","transition","BottomNavigation","config","actions","scenes","color","secondary","onChangeScene","theme","ref","state","setState","initialScene","sceneKey","ActiveSceneKey","setActiveSceneKey","accent","primary","handleChange","key","current","animateNextTransition","flex","width","height","padding","map","k","Scene","styles","paper","backgroundColor","i","content","isDark","StyleSheet","create","minHeight","flexDirection","alignContent","alignItems","justifyContent","flexGrow","action","minWidth","maxWidth","marginTop","marginBottom","paddingHorizontal","text","fontSize","marginHorizontal","fontWeight","textAlign","ActionButton","label","icon","labelHidden","index","iconSize","labelDirection","active","rest","Animated","Value","scale","fontScale","opacity","parallel","timing","toValue","duration","easing","Easing","linear","start","transform","undefined","textTransform"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect, useRef, Ref} from 'react';\nimport {Animated, Platform, Easing, StyleSheet, View} from 'react-native';\nimport Icon from './Core/Icon';\nimport Ripple from './Core/Ripple';\nimport Text from './Core/Typography';\nimport {Transitioning, Transition} from 'react-native-reanimated';\nimport SafeAreaViews from 'react-native-safe-area-view';\nimport {useTheme, ThemeTypes} from '../Theming';\nimport Color from 'color';\n\nconst SafeAreaView = Platform.OS === 'web' ? View : SafeAreaViews;\ninterface BottomNavigationProps {\n  config?: {\n    initialScene?: string;\n    labelHidden?: boolean;\n    labelDirection?: 'row' | 'row-reverse' | 'column' | 'column-reverse';\n    color?: string;\n  };\n  actions?: Array<{\n    label?: string;\n    icon?: string;\n    color?: string;\n    sceneKey?: string;\n  }>;\n  scenes?: Array<{key?: string; Scene?: React.ReactNode}>;\n  onChangeScene?: (params: {sceneKey?: string}) => void | null;\n  color?: string;\n  secondary?: boolean;\n  top?: any;\n  theme?: ThemeTypes;\n}\nconst transition = (\n  <Transition.Sequence>\n    <Transition.Out type=\"fade\" interpolation=\"easeInOut\" durationMs={200} />\n    <Transition.In type=\"fade\" interpolation=\"easeInOut\" durationMs={200} />\n  </Transition.Sequence>\n);\nconst BottomNavigation: React.FC<BottomNavigationProps> = ({\n  config = {},\n  actions = [],\n  scenes = [],\n  color,\n  secondary,\n  onChangeScene = () => {},\n  theme,\n}) => {\n  theme = useTheme(theme);\n  const ref: Ref<any> = useRef(null);\n  const [state, setState] = useState(0);\n  const [ActiveSceneKey, setActiveSceneKey] = useState(\n    config.initialScene || actions[0].sceneKey,\n  );\n  color = color ? color : secondary ? theme.color.accent : theme.color.primary;\n  const handleChange = (key: string) => {\n    onChangeScene({sceneKey: key});\n    ref.current.animateNextTransition();\n    setState(state + 1);\n    setActiveSceneKey(key);\n  };\n  return (\n    <View style={{flex: 1}}>\n      <Transitioning.View\n        ref={ref}\n        style={{\n          flex: 1,\n          width: '100%',\n          height: '100%',\n          padding: 24,\n        }}\n        transition={transition}>\n        {scenes.map(\n          ({key, Scene}: {key?: string; Scene?: any}, k: any) =>\n            key === ActiveSceneKey && <Scene key={k} />,\n        )}\n      </Transitioning.View>\n      <SafeAreaView\n        style={[\n          styles.paper,\n          {\n            backgroundColor: color,\n          },\n        ]}>\n        <>\n          {actions.map((i: any, k: number) => (\n            <View style={styles.content} key={k}>\n              <ActionButton\n                {...i}\n                index={k}\n                handleChange={handleChange}\n                active={ActiveSceneKey === i.sceneKey}\n                color={Color(color).isDark() ? 'white' : theme.color.primary}\n                {...config}\n              />\n            </View>\n          ))}\n        </>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  paper: {\n    minHeight: 70,\n    flexDirection: 'row',\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    flex: 1,\n    flexGrow: 1,\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  action: {\n    minWidth: 80,\n    maxWidth: 168,\n    marginTop: 8,\n    marginBottom: 12,\n    paddingHorizontal: 12,\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  text: {\n    fontSize: 14,\n    marginHorizontal: 8,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n});\nexport default BottomNavigation;\n\ninterface ActionButtonProps {\n  label?: string;\n  icon?: string;\n  color?: string;\n  sceneKey?: string;\n  labelHidden?: boolean;\n  labelDirection?: 'row' | 'row-reverse' | 'column' | 'column-reverse';\n  index?: number;\n  // handleChange?: (index: number) => void | null;\n  handleChange?: any;\n  iconSize?: number;\n  active?: string;\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = ({\n  label = '',\n  icon = 'send',\n  color = 'white',\n  labelHidden = false,\n  index = 0,\n  handleChange,\n  sceneKey,\n  iconSize = 24,\n  labelDirection = 'column',\n  active = 0,\n  ...rest\n}) => {\n  const [scale] = useState(new Animated.Value(active ? 1 : 0.8));\n  const [fontScale] = useState(new Animated.Value(active ? 15 : 0));\n  const opacity = useRef(new Animated.Value(active ? 1 : 0.5)).current;\n\n  useEffect(() => {\n    Animated.parallel([\n      Animated.timing(scale, {\n        toValue: active ? 1 : 0.9,\n        duration: 200,\n        easing: Easing.linear,\n      }),\n      Animated.timing(fontScale, {\n        toValue: active ? 15 : 1,\n        duration: 200,\n        easing: Easing.linear,\n      }),\n      Animated.timing(opacity, {\n        toValue: active ? 1 : 0.81,\n        duration: 200,\n        easing: Easing.linear,\n      }),\n    ]).start();\n  }, [active]);\n\n  return (\n    <Ripple\n      onPress={() => handleChange(sceneKey)}\n      rippleCentered={true}\n      rippleColor={color}\n      {...rest}>\n      <Animated.View\n        style={[\n          styles.action,\n          {transform: [{scale}], opacity, flexDirection: labelDirection},\n        ]}>\n        {icon && (\n          <Icon\n            color={color}\n            size={iconSize}\n            style={{marginBottom: 4}}\n            name={icon}\n          />\n        )}\n        {label === undefined ? (\n          <Fragment />\n        ) : labelHidden === false ? (\n          <Text style={[styles.text, {color}]} transform=\"capitalize\">\n            {label}\n          </Text>\n        ) : labelHidden === true ? (\n          <Animated.Text\n            style={[\n              styles.text,\n              {\n                color,\n                fontSize: fontScale,\n                textTransform: 'capitalize',\n              },\n            ]}>\n            {label}\n          </Animated.Text>\n        ) : (\n          <Fragment />\n        )}\n      </Animated.View>\n    </Ripple>\n  );\n};\n"]}
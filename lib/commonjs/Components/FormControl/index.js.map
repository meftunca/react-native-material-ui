{"version":3,"sources":["index.tsx"],"names":["FormControl","type","color","Palette","blue500","size","disabled","selected","setSelected","selectAnimation","Animated","Value","current","timing","toValue","duration","easing","Easing","cubic","start","alignSelf","borderRadius","overflow","fade","alpha","toString","undefined","padding","width","height","backgroundColor","borderColor","interpolate","inputRange","outputRange","darken","borderWidth","alignItems","justifyContent","alignContent","marginTop","marginLeft","isDark"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {View, Animated, Easing} from 'react-native';\nimport * as Palette from './../../Helpers/palette';\nimport Icon from '../Core/Icon';\nimport Color from 'color';\nimport Ripple from 'Components/Core/Ripple';\nconst FormControl = ({\n  type = 'checkbox',\n  color = Palette.blue500,\n  size = 16,\n  disabled = false,\n}: {\n  type?: 'checkbox' | 'radio';\n  color?: string;\n  size?: number;\n  disabled?: boolean;\n}) => {\n  const [selected, setSelected] = useState(false);\n  const selectAnimation = useRef(new Animated.Value(selected ? size : 0))\n    .current;\n  useEffect(() => {\n    Animated.timing(selectAnimation, {\n      toValue: selected ? size : 0,\n      duration: 100,\n      easing: Easing.cubic,\n    }).start();\n  }, [selected]);\n  return (\n    <View\n      style={{\n        alignSelf: 'flex-start',\n        borderRadius: 30,\n        overflow: 'hidden',\n        // opacity: disabled ? 0.5 : 1,\n      }}>\n      <Ripple\n        rippleSequential\n        rippleColor={\n          disabled\n            ? Color('#111111')\n                .fade(0.4)\n                .alpha(0.2)\n                .toString()\n            : Color(color)\n                .fade(0.7)\n                .toString()\n        }\n        onPress={disabled === false ? () => setSelected(!selected) : undefined}>\n        <View\n          style={{\n            padding: 10,\n          }}>\n          <Animated.View\n            style={{\n              overflow: 'hidden',\n              borderRadius: type === 'radio' ? 30 : 2,\n              width: size,\n              height: size,\n              backgroundColor: disabled\n                ? Color('#111111')\n                    .fade(0.7)\n                    .alpha(0.1)\n                    .toString()\n                : 'transparent',\n              borderColor: disabled\n                ? Color('#111111')\n                    .fade(0.4)\n                    .alpha(0.2)\n                    .toString()\n                : selectAnimation.interpolate({\n                    inputRange: [0, 12],\n                    outputRange: [\n                      '#111111',\n                      disabled\n                        ? Color(color)\n                            .darken(0.8)\n                            .fade(0.5)\n                            .toString()\n                        : color,\n                    ],\n                  }),\n              borderWidth: type === 'radio' ? 1.5 : 1.5,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}>\n            <Animated.View\n              style={[\n                {\n                  borderRadius: type === 'radio' ? 30 : 0,\n                  width: selectAnimation,\n                  height: selectAnimation,\n                  alignItems: 'center',\n                  alignContent: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: disabled\n                    ? Color(color)\n                        .darken(0.8)\n                        .fade(0.8)\n                        .toString()\n                    : color,\n                },\n              ]}>\n              {type === 'checkbox' && selected && (\n                <Icon\n                  name=\"check\"\n                  size={size - 4}\n                  style={{marginTop: 1.5, marginLeft: 1}}\n                  color={\n                    disabled && selected\n                      ? Color(color)\n                          .darken(0.8)\n                          .fade(0.8)\n                          .toString()\n                      : Color(color).isDark()\n                      ? 'white'\n                      : 'black'\n                  }\n                />\n              )}\n            </Animated.View>\n          </Animated.View>\n        </View>\n      </Ripple>\n    </View>\n  );\n};\nexport default FormControl;\n"]}
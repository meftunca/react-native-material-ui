{"version":3,"sources":["Button.tsx"],"names":["Button","variant","children","radius","paperProps","padding","margin","color","role","style","size","type","dense","fullWidth","iconFontFamily","rippleStyle","onLayout","buttonRef","theme","contentContainerStyle","icon","textProps","transform","props","themeControl","isDefaultButton","textColor","primary","text","isDark","iconStyles","marginRight","undefined","borderRadius","overflow","buttonStyleGenerator","lighten","toString","darken","alignSelf","backgroundColor","minHeight","textTransform","textAlign","alpha"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Ripple, {RippleProps} from './../Core/Ripple';\nimport Text, {TextProps} from './../Core/Typography';\nimport Surface, {SurfaceProps} from './../Core/Surface';\nimport {ViewStyle, StyleProp, PixelRatio, View, ViewProps} from 'react-native';\nimport Icon, {IconFontFamily} from '../Core/Icon';\nimport Color from 'color';\nimport {useTheme} from 'Theming';\n\nexport interface ButtonProps extends RippleProps {\n  iconFontFamily?: IconFontFamily;\n  variant?: 'text' | 'outlined' | 'contained';\n  type?: 'button' | 'drawer' | 'dialog';\n  role?: 'fab' | 'icon' | 'button';\n  paperProps?: SurfaceProps;\n  color?: string;\n  radius?: number;\n  size?: number;\n  dense?: boolean;\n  fullWidth?: boolean;\n  onLayout?: any; // bu kısımı sonrada düzenle\n  textProps?: TextProps;\n  transform?: 'none' | 'capitalize' | 'uppercase' | 'lowercase';\n  icon?: string;\n  theme?: object;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  rippleStyle?: StyleProp<ViewStyle>;\n  buttonRef?: any;\n}\nconst Button: React.FC<ButtonProps> = ({\n  variant = 'text',\n  children,\n  radius = 4,\n  paperProps = {padding: [0, 8], margin: 2},\n  color,\n  role = 'button',\n  style,\n  size = 24,\n  type = 'button',\n  dense = false,\n  fullWidth = false,\n  iconFontFamily,\n  rippleStyle,\n  onLayout,\n  buttonRef,\n  theme,\n  contentContainerStyle,\n  icon,\n  textProps,\n  transform = 'capitalize',\n  ...props\n}) => {\n  const themeControl = useTheme(theme);\n  const isDefaultButton: boolean = role === 'button';\n  const textColor: any =\n    !color && role === 'button'\n      ? themeControl.color.primary\n      : role !== 'button'\n      ? themeControl.color.text\n      : Color(color).isDark()\n      ? variant === 'contained'\n        ? 'white'\n        : color\n      : color;\n  const iconStyles = {\n    marginRight: 8,\n  };\n  return (\n    <Ripple\n      // rippleFades\n      // rippleSequential\n      // rippleCentered\n      rippleOpacity={Color(textColor).isDark() ? 0.4 : undefined}\n      {...props}\n      style={[\n        rippleStyle,\n        {\n          margin: 4,\n          borderRadius: !isDefaultButton\n            ? dense\n              ? size - 4\n              : size + 4\n            : radius,\n          overflow: 'hidden',\n        },\n        buttonStyleGenerator(\n          isDefaultButton ? variant : role === 'fab' ? 'contained' : 'text',\n          textColor,\n          type,\n        ),\n      ]}\n      rippleDuration={300}\n      rippleColor={\n        Color(textColor).isDark()\n          ? Color(textColor)\n              .lighten(0.2)\n              .toString()\n          : Color(textColor)\n              .darken(0.2)\n              .toString()\n      }>\n      <View\n        ref={buttonRef}\n        onLayout={onLayout}\n        style={[\n          {\n            borderRadius: !isDefaultButton\n              ? dense\n                ? size - 4\n                : size + 4\n              : radius,\n            overflow: 'hidden',\n          },\n          contentContainerStyle,\n          !isDefaultButton && fullWidth === false\n            ? {alignSelf: 'flex-start'}\n            : {},\n        ]}>\n        <Surface\n          {...paperProps}\n          direction=\"row\"\n          justify={type === 'drawer' ? 'flex-start' : 'center'}\n          alignItems=\"center\"\n          alignContent=\"center\"\n          margin={[2, 16]}\n          padding={0}\n          style={[\n            style,\n            {\n              backgroundColor: 'transparent',\n              borderRadius: !isDefaultButton\n                ? dense\n                  ? size - 4\n                  : size + 4\n                : radius,\n              minHeight: 36,\n              // minWidth: 64,\n            },\n          ]}>\n          {icon !== undefined && (\n            <Icon\n              name={icon}\n              color={\n                type === 'button' && variant === 'contained'\n                  ? Color(textColor).isDark()\n                    ? 'white'\n                    : textColor\n                  : textColor\n              }\n              family={iconFontFamily}\n              size={size - (dense ? 4 : 0)}\n              style={iconStyles}\n            />\n          )}\n          {role === 'button' && (\n            <>\n              {typeof children === 'string' ? (\n                <Text\n                  dense={dense}\n                  style={{\n                    textTransform: transform,\n                    textAlign: 'center',\n                  }}\n                  variant=\"button\"\n                  {...textProps}\n                  contrast={0}\n                  color={\n                    type === 'button' && variant === 'contained'\n                      ? Color(textColor).isDark()\n                        ? 'white'\n                        : textColor\n                      : textColor\n                  }>\n                  {children}\n                </Text>\n              ) : (\n                children\n              )}\n            </>\n          )}\n        </Surface>\n      </View>\n    </Ripple>\n  );\n};\n\nconst buttonStyleGenerator = (variant: string, color: string, type: string) => {\n  let style: any = {};\n  switch (variant) {\n    case 'text':\n      style['backgroundColor'] = 'transparent';\n      style['elevation'] = 0;\n      style['shadowOpacity'] = 0;\n      break;\n    case 'outlined':\n      style['borderWidth'] = 1;\n      style['borderColor'] = Color(color)\n        .alpha(0.5)\n        .toString();\n      style['backgroundColor'] = 'transparent';\n      style['elevation'] = 0;\n      style['shadowOpacity'] = 0;\n      break;\n    case 'contained':\n      style['backgroundColor'] = color;\n      break;\n\n    default:\n      break;\n  }\n  return style;\n};\n\nexport default Button;\n"]}
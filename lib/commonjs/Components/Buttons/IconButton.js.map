{"version":3,"sources":["IconButton.tsx"],"names":["IconButton","children","color","role","style","size","iconFontFamily","backgroundColor","rippleStyle","theme","containerStyle","icon","props","themeControl","textColor","primary","borderRadius","minHeight","minWidth","undefined","margin","width","height"],"mappings":"mWAAA,oDACA,gEAEA,yCACA,0DACA,sC,4GAgBA,GAAMA,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAaxC,IAZJC,CAAAA,QAYI,MAZJA,QAYI,iBAXJC,KAWI,CAXJA,KAWI,qBAXI,MAWJ,2BAVJC,IAUI,CAVJA,IAUI,oBAVG,QAUH,WATJC,KASI,MATJA,KASI,gBARJC,IAQI,CARJA,IAQI,oBARG,EAQH,WAPJC,cAOI,MAPJA,cAOI,CANJC,eAMI,MANJA,eAMI,CALJC,WAKI,MALJA,WAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,cAGI,MAHJA,cAGI,CAFJC,IAEI,MAFJA,IAEI,CADDC,KACC,yKACJ,GAAMC,CAAAA,YAAiB,CAAG,sBAASJ,KAAT,CAA1B,CACA,GAAMK,CAAAA,SAAiB,CACrBZ,KAAK,EAAIA,KAAK,GAAIW,CAAAA,YAAY,CAACX,KAA/B,CACIW,YAAY,CAACX,KAAb,CAAmBA,KAAnB,CADJ,CAEIA,KAAK,CACLA,KADK,CAELW,YAAY,CAACX,KAAb,CAAmBa,OALzB,CAMA,MACE,8BAAC,iBAAD,EACE,aAAa,CAAC,MADhB,CAEE,KAAK,CAAE,CACL,CACEC,YAAY,CAAEX,IAAI,CAAG,CADvB,CAEEY,SAAS,CAAEZ,IAAI,EAAIF,IAAI,GAAK,MAAT,CAAkB,CAAlB,CAAsB,CAA1B,CAFjB,CAGEe,QAAQ,CAAEb,IAAI,EAAIF,IAAI,GAAK,MAAT,CAAkB,CAAlB,CAAsB,CAA1B,CAHhB,CADK,CAMLO,cANK,CAFT,iDAUE,6BAAC,eAAD,0BACME,KADN,EAEE,2BAA2B,CAAEP,IAF/B,CAGE,KAAK,CAAE,CACLG,WADK,CAEL,CACED,eAAe,CAAfA,eADF,CAEES,YAAY,CAAEX,IAAI,CAAG,CAFvB,CAFK,CAHT,CAUE,WAAW,CAAES,SAVf,kDAWGH,IAAI,GAAKQ,SAAT,EACC,6BAAC,aAAD,EACE,IAAI,CAAER,IADR,CAEE,KAAK,CAAEG,SAFT,CAGE,MAAM,CAAER,cAHV,CAIE,IAAI,CAAED,IAJR,CAKE,KAAK,CAAE,CAACe,MAAM,CAAEjB,IAAI,GAAK,MAAT,CAAkB,CAAlB,CAAsB,CAA/B,CAAkCkB,KAAK,CAAEhB,IAAzC,CAA+CiB,MAAM,CAAEjB,IAAvD,CALT,iDAZJ,CAVF,CADF,CAkCD,CAvDD,C,aAyDeL,U","sourcesContent":["import React from 'react';\nimport Ripple, {RippleProps} from './../Core/Ripple';\nimport {SurfaceProps} from './../Core/Surface';\nimport {ViewStyle, StyleProp, View} from 'react-native';\nimport Icon, {IconFontFamily} from '../Core/Icon';\nimport {useTheme} from '../../Theming';\n\nexport interface IconButtonProps extends RippleProps {\n  iconFontFamily?: IconFontFamily;\n  role?: 'icon' | 'chip';\n  paperProps?: SurfaceProps;\n  color?: // | string\n  string | ('primary' | 'secondary' | 'accent' | 'error' | 'warning' | 'text');\n  backgroundColor?: string;\n  size?: number;\n  icon?: string;\n  theme?: object;\n  containerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  rippleStyle?: StyleProp<ViewStyle>;\n}\nconst IconButton: React.FC<IconButtonProps> = ({\n  children,\n  color = 'text',\n  role = 'button',\n  style,\n  size = 24,\n  iconFontFamily,\n  backgroundColor,\n  rippleStyle,\n  theme,\n  containerStyle,\n  icon,\n  ...props\n}) => {\n  const themeControl: any = useTheme(theme);\n  const textColor: string =\n    color && color in themeControl.color\n      ? themeControl.color[color]\n      : color\n      ? color\n      : themeControl.color.primary;\n  return (\n    <View\n      pointerEvents=\"auto\"\n      style={[\n        {\n          borderRadius: size * 2,\n          minHeight: size + (role === 'chip' ? 4 : 8),\n          minWidth: size + (role === 'chip' ? 4 : 8),\n        },\n        containerStyle,\n      ]}>\n      <Ripple\n        {...props}\n        rippleContainerBorderRadius={size}\n        style={[\n          rippleStyle,\n          {\n            backgroundColor,\n            borderRadius: size * 2,\n          },\n        ]}\n        rippleColor={textColor}>\n        {icon !== undefined && (\n          <Icon\n            name={icon}\n            color={textColor}\n            family={iconFontFamily}\n            size={size}\n            style={{margin: role === 'chip' ? 2 : 8, width: size, height: size}}\n          />\n        )}\n      </Ripple>\n    </View>\n  );\n};\n\nexport default IconButton;\n"]}
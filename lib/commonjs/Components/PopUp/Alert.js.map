{"version":3,"sources":["Alert.tsx"],"names":["Alert","onDismiss","header","prompt","contentText","action","isOpen","justifyContent","map","k","label","accessibilityLabel","color","onPress","e"],"mappings":"mPAAA,oDACA,yDACA,iEACA,sE,qGAqBA,GAAMA,CAAAA,KAA0B,CAAG,QAA7BA,CAAAA,KAA6B,MAO7B,IANJC,CAAAA,SAMI,MANJA,SAMI,CALJC,MAKI,MALJA,MAKI,kBAJJC,MAII,CAJJA,MAII,sBAJK,KAIL,mCAHJC,WAGI,CAHJA,WAGI,2BAHU,EAGV,kBAFJC,MAEI,MAFJA,MAEI,kBADJC,MACI,CADJA,MACI,sBADK,KACL,aACJ,MACE,8BAAC,eAAD,EAAQ,aAAa,CAAC,MAAtB,CAA6B,OAAO,CAAEA,MAAtC,CAA8C,OAAO,CAAEL,SAAvD,iDACGC,MAAM,EAAI,6BAAC,eAAD,CAAQ,MAAR,0BAAmBA,MAAnB,mDADb,CAEG,CAACE,WAAW,EAAID,MAAhB,GACC,6BAAC,eAAD,CAAQ,OAAR,kDACE,6BAAC,mBAAD,EAAM,OAAO,CAAC,OAAd,iDAAuBC,WAAvB,CADF,CAHJ,CAOE,6BAAC,eAAD,CAAQ,OAAR,EAAgB,KAAK,CAAE,CAACG,cAAc,CAAE,UAAjB,CAAvB,iDACGF,MAAM,EACLA,MAAM,CAACG,GAAP,CAAW,eAA8CC,CAA9C,KAAEC,CAAAA,KAAF,OAAEA,KAAF,CAASC,kBAAT,OAASA,kBAAT,CAA6BC,KAA7B,OAA6BA,KAA7B,CAAoCC,QAApC,OAAoCA,OAApC,OACT,8BAAC,eAAD,EACE,GAAG,CAAEJ,CADP,CAEE,kBAAkB,CAAEE,kBAFtB,CAGE,KAAK,CAAEC,KAHT,CAIE,OAAO,CAAE,iBAAAE,CAAC,CAAI,CACZb,SAAS,GACTY,QAAO,CAACC,CAAD,CAAP,CACD,CAPH,iDAQGJ,KARH,CADS,EAAX,CAFJ,CAPF,CADF,CAyBD,CAjCD,C,aAmCeV,K","sourcesContent":["import React from 'react';\nimport Dialog from '../Dialog';\nimport Button from '../Buttons/Button';\nimport Text, {TextProps} from '../Core/Typography';\n\ntype ActionType = {\n  color?: string;\n  label?: string;\n  accessibilityLabel?: string;\n  onPress?: (event?: any) => void;\n};\ntype AlertType = {\n  onDismiss?: () => void | undefined;\n  header?: {\n    title?: string;\n    subtitle?: string;\n    titleProps?: TextProps;\n    subtitleProps?: TextProps;\n  };\n  prompt?: boolean;\n  contentText?: string;\n  action?: ActionType[];\n  isOpen?: boolean;\n};\nconst Alert: React.FC<AlertType> = ({\n  onDismiss,\n  header,\n  prompt = false,\n  contentText = '',\n  action,\n  isOpen = false,\n}) => {\n  return (\n    <Dialog animationType=\"fade\" visible={isOpen} onClose={onDismiss}>\n      {header && <Dialog.Header {...header} />}\n      {(contentText || prompt) && (\n        <Dialog.Content>\n          <Text variant=\"body1\">{contentText}</Text>\n        </Dialog.Content>\n      )}\n      <Dialog.Actions style={{justifyContent: 'flex-end'}}>\n        {action &&\n          action.map(({label, accessibilityLabel, color, onPress}, k) => (\n            <Button\n              key={k}\n              accessibilityLabel={accessibilityLabel}\n              color={color}\n              onPress={e => {\n                onDismiss();\n                onPress(e);\n              }}>\n              {label}\n            </Button>\n          ))}\n      </Dialog.Actions>\n    </Dialog>\n  );\n};\n\nexport default Alert;\n"]}
{"version":3,"sources":["AppBar.tsx"],"names":["AnimatedSafeAreaView","Animated","createAnimatedComponent","SafeAreaView","AppBar","children","subChildren","subChildrenProps","color","elevation","childrens","React","Children","map","child","cloneElement","isDark","style","StyleSheet","create","container","flexDirection","alignContent","alignItems","paddingHorizontal","paddingVertical","minHeight","backgroundColor","margin","root","justifyContent","paddingLeft","marginLeft","marginRight","Grow","flexGrow","displayName","Content","Action"],"mappings":"mPAAA,oDACA,yCACA,wDACA,0DACA,oDACA,sDAEA,4F,uGACA,GAAMA,CAAAA,oBAAoB,CAAGC,sBAASC,uBAAT,CAAiCC,gCAAjC,CAA7B,CAYA,GAAMC,CAAAA,MAA6C,CAAG,QAAhDA,CAAAA,MAAgD,MAMhD,IALJC,CAAAA,QAKI,MALJA,QAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,gBAGI,MAHJA,gBAGI,iBAFJC,KAEI,CAFJA,KAEI,qBAFI,OAEJ,gCADJC,SACI,CADJA,SACI,yBADQ,CACR,gBAMJ,GAAMC,CAAAA,SAAS,CAAGC,eAAMC,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,CAA6B,SAACS,KAAD,CAAgB,CAC7D,MAAOH,gBAAMI,YAAN,CAAmBD,KAAnB,CAA0B,CAC/BN,KAAK,CAAE,mBAAMA,KAAN,EAAaQ,MAAb,GAAwB,OAAxB,CAAkC,MADV,CAA1B,CAAP,CAGD,CAJiB,CAAlB,CAKA,GAAMC,CAAAA,KAAK,CAAGC,wBAAWC,MAAX,CAAkB,CAC9BC,SAAS,CAAE,CACTC,aAAa,CAAE,KADN,CAETC,YAAY,CAAE,QAFL,CAGTC,UAAU,CAAE,QAHH,CAITC,iBAAiB,CAAE,EAJV,CAKTC,eAAe,CAAE,CALR,CAMTC,SAAS,CAAE,EANF,CAOTC,eAAe,CAAEnB,KAPR,CAQToB,MAAM,CAAE,CARC,CADmB,CAW9BC,IAAI,CAAE,CACJC,cAAc,CAAE,YADZ,CAXwB,CAAlB,CAAd,CAeA,MACE,8BAAC,oBAAD,EAAsB,KAAK,CAAE,CAACb,KAAK,CAACY,IAAP,CAAa,yCAAqBpB,SAArB,CAAb,CAA7B,iDACE,6BAAC,qBAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACQ,KAAK,CAACG,SAAP,CAAtB,iDAA0CV,SAA1C,CADF,CAEGJ,WAAW,EACV,6BAAC,iBAAD,EACE,KAAK,CAAE,CACL,CACEqB,eAAe,CAAEnB,KADnB,CAEEkB,SAAS,CAAE,GAFb,CAGEI,cAAc,CAAE,QAHlB,CAIEC,WAAW,CAAE,EAJf,CADK,CADT,iDASE,6BAAC,iBAAD,wBAAM,KAAK,CAAE,CAACC,UAAU,CAAE,EAAb,CAAiBC,WAAW,CAAE,EAA9B,CAAb,EAAoD1B,gBAApD,mDACGD,WAAW,EADd,CATF,CAHJ,CADF,CAoBD,CApDD,CAsDA,GAAM4B,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,SAAM,8BAAC,iBAAD,EAAM,KAAK,CAAE,CAACC,QAAQ,CAAE,CAAX,CAAb,iDAAN,EAAvB,CAEAD,IAAI,CAACE,WAAL,CAAmB,MAAnB,CACAhC,MAAM,CAAC8B,IAAP,CAAcA,IAAd,CACA9B,MAAM,CAACiC,OAAP,CAAiBA,gBAAjB,CACAjC,MAAM,CAACkC,MAAP,CAAgBA,eAAhB,C,aAMelC,M","sourcesContent":["import React from 'react';\nimport {View, StyleSheet, ViewProps, Animated} from 'react-native';\nimport Action from './Action';\nimport Content, {AppBarContentProps} from './Content';\nimport Color from 'color';\nimport {elevationShadowStyle} from 'Helpers/styleGenerator';\nimport {IconButtonProps} from 'Components/Buttons/IconButton';\nimport SafeAreaView from 'react-native-safe-area-view';\nconst AnimatedSafeAreaView = Animated.createAnimatedComponent(SafeAreaView);\ninterface AppBarProps extends ViewProps {\n  subChildren?: any | React.ReactNode;\n  subChildrenProps?: any;\n  color?: string;\n  elevation?: number;\n}\ninterface CompoundProps {\n  Content: React.FC<AppBarContentProps>;\n  Grow: React.FC;\n  Action: React.FC<IconButtonProps>;\n}\nconst AppBar: React.FC<AppBarProps> & CompoundProps = ({\n  children,\n  subChildren,\n  subChildrenProps,\n  color = 'white',\n  elevation = 2,\n}) => {\n  // color = color\n  //   ? color\n  //   : secondary\n  //   ? context.colors.primary\n  //   : context.colors.primary;\n  const childrens = React.Children.map(children, (child: any) => {\n    return React.cloneElement(child, {\n      color: Color(color).isDark() ? 'white' : '#333',\n    });\n  });\n  const style = StyleSheet.create({\n    container: {\n      flexDirection: 'row',\n      alignContent: 'center',\n      alignItems: 'center',\n      paddingHorizontal: 16,\n      paddingVertical: 8,\n      minHeight: 56,\n      backgroundColor: color,\n      margin: 0,\n    },\n    root: {\n      justifyContent: 'flex-start',\n    },\n  });\n  return (\n    <AnimatedSafeAreaView style={[style.root, elevationShadowStyle(elevation)]}>\n      <Animated.View style={[style.container]}>{childrens}</Animated.View>\n      {subChildren && (\n        <View\n          style={[\n            {\n              backgroundColor: color,\n              minHeight: 100,\n              justifyContent: 'center',\n              paddingLeft: 60,\n            },\n          ]}>\n          <View style={{marginLeft: 24, marginRight: 16}} {...subChildrenProps}>\n            {subChildren()}\n          </View>\n        </View>\n      )}\n    </AnimatedSafeAreaView>\n  );\n};\n\nconst Grow: React.FC = () => <View style={{flexGrow: 1}} />;\n\nGrow.displayName = 'Grow';\nAppBar.Grow = Grow;\nAppBar.Content = Content;\nAppBar.Action = Action;\n\n// AppBar.displayName = Grow;\n// AppBar.displayName = Content;\n// AppBar.displayName = Action;\n\nexport default AppBar;\n"]}
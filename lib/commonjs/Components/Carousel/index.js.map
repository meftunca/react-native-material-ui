{"version":3,"sources":["index.tsx"],"names":["Carousel","imgData","width","window","active","setState","_scroller","to","console","log","current","_component","scrollResponderScrollTo","x","Dimensions","get","y","duration","animated","nativeEvent","index","Number","contentOffset","toFixed","length","flexDirection","padding","map","i","k","style","paginationWrapper","Array","fill","blue500","StyleSheet","create","flex","justifyContent","marginTop"],"mappings":"kbAAA,qDACA,yCACA,kEACA,wEACA,8CACA,8DACA,0C,wGACA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAgC,IAA9BC,CAAAA,OAA8B,MAA9BA,OAA8B,IACxCC,CAAAA,KADwC,CAC/B,2BAAgBC,MADe,CACxCD,KADwC,eAEpB,oBAAS,CAAT,CAFoB,qDAExCE,MAFwC,eAEhCC,QAFgC,eAG/C,GAAMC,CAAAA,SAAkC,CAAG,kBAAO,IAAP,CAA3C,CACA,GAAMC,CAAAA,EAAE,CAAG,QAALA,CAAAA,EAAK,CAACH,MAAD,CAAoB,uBAC7BC,QAAQ,CAACD,MAAD,CAAR,CACAI,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCH,SAAS,CAACI,OAA7C,EAEA,mBAAAJ,SAAS,CAACI,OAAV,iCAAmBC,UAAnB,CAA8BC,uBAA9B,CAAsD,CACpDC,CAAC,CAAEC,wBAAWC,GAAX,CAAe,QAAf,EAAyBb,KAAzB,CAAiCE,MADgB,CAEpDY,CAAC,CAAE,CAFiD,CAGpDC,QAAQ,CAAE,GAH0C,CAIpDC,QAAQ,CAAE,IAJ0C,CAAtD,EAMD,CAVD,CAWA,MACE,8BAAC,iBAAD,kDACE,6BAAC,qBAAD,CAAU,UAAV,EACE,GAAG,CAAEZ,SADP,CAEE,UAAU,CAAE,IAFd,CAGE,oBAAoB,CAAE,KAHxB,CAIE,OAAO,CAAE,KAJX,CAKE,8BAA8B,CAAE,KALlC,CAME,6BAA6B,CAAE,IANjC,CAOE,aAAa,CAAE,IAPjB,CAQE,aAAa,CAAE,IARjB,CASE,mBAAmB,CAAE,mCAAuC,IAArCa,CAAAA,WAAqC,OAArCA,WAAqC,CAC1D,GAAIC,CAAAA,KAAa,CAAGC,MAAM,CACxBA,MAAM,CAACF,WAAW,CAACG,aAAZ,CAA0BT,CAA1B,CAA8BX,KAA/B,CAAN,CAA4CqB,OAA5C,CAAoD,CAApD,CADwB,CAA1B,CAGAlB,QAAQ,CAACe,KAAD,CAAR,CACD,CAdH,CAeE,qBAAqB,CAAE,CACrBlB,KAAK,CAAEA,KAAK,CAAGD,OAAO,CAACuB,MADF,CAErBC,aAAa,CAAE,KAFM,CAGrBC,OAAO,CAAE,CAHY,CAfzB,iDAoBGzB,OAAO,CAAC0B,GAAR,CAAY,SAACC,CAAD,CAASC,CAAT,QACX,8BAAC,oBAAD,0BAAiBD,CAAjB,EAAoB,GAAG,CAAEC,CAAzB,kDADW,EAAZ,CApBH,CADF,CAyBE,6BAAC,iBAAD,EAAM,KAAK,CAAEC,KAAK,CAACC,iBAAnB,iDACG,GAAIC,CAAAA,KAAJ,CAAU/B,OAAO,CAACuB,MAAlB,EAA0BS,IAA1B,CAA+B,EAA/B,EAAmCN,GAAnC,CAAuC,SAACC,CAAD,CAAIC,CAAJ,QACtC,8BAAC,eAAD,EAAQ,OAAO,CAAE,yBAAMtB,CAAAA,EAAE,CAACsB,CAAD,CAAR,EAAjB,CAA8B,GAAG,CAAED,CAAC,EAAIC,CAAxC,iDACE,6BAAC,uBAAD,EAAgB,KAAK,CAAEK,gBAAvB,CAAgC,MAAM,CAAE9B,MAAM,EAAIyB,CAAlD,iDADF,CADsC,EAAvC,CADH,CAzBF,CADF,CAmCD,CAlDD,CAoDO,GAAMC,CAAAA,KAAK,CAAGK,wBAAWC,MAAX,CAAkB,CACrCL,iBAAiB,CAAE,CACjBM,IAAI,CAAE,CADW,CAEjBnC,KAAK,CAAE,MAFU,CAGjBuB,aAAa,CAAE,KAHE,CAIjBa,cAAc,CAAE,QAJC,CAKjBC,SAAS,CAAE,CAAC,EALK,CADkB,CAAlB,CAAd,C,iCAUQvC,Q","sourcesContent":["import React, {useState, useRef, Ref} from 'react';\nimport {Animated, Dimensions, StyleSheet, View} from 'react-native';\nimport ScaledImage from './ScaledImage';\nimport PaginationItem from './PaginationItem';\nimport {blue500} from '../../Helpers/palette';\nimport Ripple from '../Core/Ripple';\nimport {useDimensions} from '../../Helpers/Hooks';\nconst Carousel = ({imgData}: {imgData?: any}) => {\n  const {width} = useDimensions().window;\n  const [active, setState] = useState(0);\n  const _scroller: Ref<{_component?: any}> = useRef(null);\n  const to = (active: number) => {\n    setState(active);\n    console.log(' _scroller.current ', _scroller.current);\n    // _scroller.current &&\n    _scroller.current?._component.scrollResponderScrollTo({\n      x: Dimensions.get('window').width * active,\n      y: 0,\n      duration: 400,\n      animated: true,\n    });\n  };\n  return (\n    <View>\n      <Animated.ScrollView\n        ref={_scroller}\n        horizontal={true}\n        alwaysBounceVertical={false}\n        bounces={false}\n        showsHorizontalScrollIndicator={false}\n        disableScrollViewPanResponder={true}\n        pagingEnabled={true}\n        scrollEnabled={true}\n        onMomentumScrollEnd={({nativeEvent}: {nativeEvent: any}) => {\n          let index: number = Number(\n            Number(nativeEvent.contentOffset.x / width).toFixed(0),\n          );\n          setState(index);\n        }}\n        contentContainerStyle={{\n          width: width * imgData.length,\n          flexDirection: 'row',\n          padding: 0,\n        }}>\n        {imgData.map((i: any, k: number) => (\n          <ScaledImage {...i} key={k} />\n        ))}\n      </Animated.ScrollView>\n      <View style={style.paginationWrapper}>\n        {new Array(imgData.length).fill('').map((i, k) => (\n          <Ripple onPress={() => to(k)} key={i || k}>\n            <PaginationItem color={blue500} active={active == k} />\n          </Ripple>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport const style = StyleSheet.create({\n  paginationWrapper: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: -20,\n  },\n});\n\nexport default Carousel;\n"]}
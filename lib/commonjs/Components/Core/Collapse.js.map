{"version":3,"sources":["Collapse.tsx"],"names":["Collapse","expanded","delay","duration","children","easyFunc","Easing","linear","type","rest","collapse","Animated","Value","current","mount","setMount","setTimeout","timing","toValue","easing","start","interpolateHeight","interpolate","inputRange","outputRange","interpolatePosition","width","overflow","flexDirection","alignSelf","marginTop","minHeght","maxHeight"],"mappings":"ohBAAA,qDACA,yC,uGAUA,GAAMA,CAAAA,QAAiC,CAAG,QAApCA,CAAAA,QAAoC,MAQpC,wBAPJC,QAOI,CAPJA,QAOI,wBAPO,KAOP,+BANJC,KAMI,CANJA,KAMI,qBANI,CAMJ,+BALJC,QAKI,CALJA,QAKI,wBALO,GAKP,eAJJC,QAII,MAJJA,QAII,oBAHJC,QAGI,CAHJA,QAGI,wBAHOC,oBAAOC,MAGd,8BAFJC,IAEI,CAFJA,IAEI,oBAFG,UAEH,WADDC,IACC,0GACJ,GAAMC,CAAAA,QAAQ,CAAG,kBAAO,GAAIC,uBAASC,KAAb,CAAmBX,QAAQ,CAAG,GAAH,CAAS,CAApC,CAAP,EAA+CY,OAAhE,CADI,cAEsB,oBAAS,KAAT,CAFtB,qDAEGC,KAFH,eAEUC,QAFV,eAGJ,qBAAU,UAAM,CACdC,UAAU,CAAC,UAAM,CACfD,QAAQ,CAAC,IAAD,CAAR,CACD,CAFS,CAEPZ,QAFO,CAAV,CAGD,CAJD,CAIG,EAJH,EAKA,qBAAU,UAAM,CACd,GAAIW,KAAJ,CACEH,sBAASM,MAAT,CAAgBP,QAAhB,CAA0B,CACxBQ,OAAO,CAAEjB,QAAQ,GAAK,IAAb,CAAoB,GAApB,CAA0B,CADX,CAExBkB,MAAM,CAAEd,QAFgB,CAMxBF,QAAQ,CAAEA,QANc,CAOxBD,KAAK,CAAEA,KAPiB,CAA1B,EAQGkB,KARH,GASH,CAXD,CAWG,CAACnB,QAAD,CAXH,EAYA,GAAMoB,CAAAA,iBAAiB,CAAGX,QAAQ,CAACY,WAAT,CAAqB,CAC3CC,UAAU,CAAE,CAAC,CAAD,CAAI,GAAJ,CAD+B,CAE3CC,WAAW,CAAE,CAAC,IAAD,CAAO,MAAP,CAF8B,CAArB,CAA1B,CAIEC,mBAAmB,CAAGf,QAAQ,CAACY,WAAT,CAAqB,CACzCC,UAAU,CAAE,CAAC,CAAD,CAAI,GAAJ,CAD6B,CAEzCC,WAAW,CAAE,CAAC,OAAD,CAAU,IAAV,CAF4B,CAArB,CAJxB,CAQA,MACE,8BAAC,iBAAD,EACE,WAAW,KADb,CAEE,iBAAiB,CAAC,YAFpB,CAGE,uBAAuB,CAAC,QAH1B,CAIE,kBAAkB,CAAC,iBAJrB,CAKE,mBAAmB,CAAC,iBALtB,CAME,UAAU,KANZ,CAOE,aAAa,CAAE,CAACvB,QAAD,CAAY,MAAZ,CAAqB,MAPtC,CAQE,KAAK,CAAE,CACLyB,KAAK,CAAE,MADF,CAELC,QAAQ,CAAE,QAFL,CAGLC,aAAa,CAAE,QAHV,CAILC,SAAS,CAAE,YAJN,CART,iDAcE,6BAAC,qBAAD,CAAU,IAAV,0BACMpB,IADN,EAEE,KAAK,CAAE,CACLD,IAAI,GAAK,UAAT,CACI,CACEsB,SAAS,CAAEL,mBADb,CADJ,CAII,CACEM,QAAQ,CAAE,CADZ,CAGEC,SAAS,CAAEX,iBAHb,CALC,CAFT,kDAaGjB,QAbH,CAdF,CADF,CAgCD,CApED,C,aAsEeJ,Q","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\nimport {Animated, Easing, View} from 'react-native';\n\ninterface CollapseProps {\n  expanded?: boolean;\n  delay?: number;\n  duration?: number;\n  children?: React.ReactNode;\n  type?: 'position' | 'height';\n  easyFunc?: (value: number) => number;\n}\nconst Collapse: React.FC<CollapseProps> = ({\n  expanded = false,\n  delay = 0,\n  duration = 300,\n  children,\n  easyFunc = Easing.linear,\n  type = 'position',\n  ...rest\n}) => {\n  const collapse = useRef(new Animated.Value(expanded ? 100 : 0)).current;\n  const [mount, setMount] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setMount(true);\n    }, duration);\n  }, []);\n  useEffect(() => {\n    if (mount)\n      Animated.timing(collapse, {\n        toValue: expanded === true ? 100 : 0,\n        easing: easyFunc,\n        // easyFunc || !expanded\n        //   ? Easing.bezier(0, 0.4, 0.7, 1)\n        //   : Easing.bezier(1, 0.7, 0.4, 0),\n        duration: duration,\n        delay: delay,\n      }).start();\n  }, [expanded]);\n  const interpolateHeight = collapse.interpolate({\n      inputRange: [0, 100],\n      outputRange: ['0%', '100%'],\n    }),\n    interpolatePosition = collapse.interpolate({\n      inputRange: [0, 100],\n      outputRange: ['-100%', '0%'],\n    });\n  return (\n    <View\n      collapsable\n      accessibilityRole=\"adjustable\"\n      accessibilityLiveRegion=\"polite\"\n      accessibilityLabel=\"collapasbleView\"\n      accessibilityTraits=\"frequentUpdates\"\n      accessible\n      pointerEvents={!expanded ? 'none' : 'auto'}\n      style={{\n        width: '100%',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        alignSelf: 'flex-start',\n      }}>\n      <Animated.View\n        {...rest}\n        style={[\n          type === 'position'\n            ? {\n                marginTop: interpolatePosition,\n              }\n            : {\n                minHeght: 0,\n\n                maxHeight: interpolateHeight,\n              },\n        ]}>\n        {children}\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default Collapse;\n"]}
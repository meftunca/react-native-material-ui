{"version":3,"sources":["Icon.tsx"],"names":["IconSet","iconName","icons","material","require","default","materialCommunity","simpleLine","fa","fa5","fa5pro","foundation","evil","octicons","ionic","feather","entypo","zocial","Icon","props","family","name","iosOnly","androidOnly","size","color","style","IconBase","Platform","OS","fontSize","maxWidth","fontFamily","replace","select","ios","android","React","PureComponent"],"mappings":"6zBAAA,oDACA,yC,mGACA,GAAMA,CAAAA,OAAY,CAAG,QAAfA,CAAAA,OAAe,CAACC,QAAD,CAAsB,CACzC,GAAIC,CAAAA,KAAU,CAAG,CACfC,QAAQ,CAAE,0BAAMC,CAAAA,OAAO,CAAC,yCAAD,CAAP,CAAmDC,OAAzD,EADK,CAEfC,iBAAiB,CAAE,mCACjBF,CAAAA,OAAO,CAAC,kDAAD,CAAP,CAA4DC,OAD3C,EAFJ,CAIfE,UAAU,CAAE,4BACVH,CAAAA,OAAO,CAAC,2CAAD,CAAP,CAAqDC,OAD3C,EAJG,CAMfG,EAAE,CAAE,oBAAMJ,CAAAA,OAAO,CAAC,uCAAD,CAAP,CAAiDC,OAAvD,EANW,CAOfI,GAAG,CAAE,qBAAML,CAAAA,OAAO,CAAC,wCAAD,CAAP,CAAkDC,OAAxD,EAPU,CAQfK,MAAM,CAAE,wBAAMN,CAAAA,OAAO,CAAC,2CAAD,CAAP,CAAqDC,OAA3D,EARO,CASfM,UAAU,CAAE,4BAAMP,CAAAA,OAAO,CAAC,sCAAD,CAAP,CAAgDC,OAAtD,EATG,CAUfO,IAAI,CAAE,sBAAMR,CAAAA,OAAO,CAAC,qCAAD,CAAP,CAA+CC,OAArD,EAVS,CAWfQ,QAAQ,CAAE,0BAAMT,CAAAA,OAAO,CAAC,oCAAD,CAAP,CAA8CC,OAApD,EAXK,CAYfS,KAAK,CAAE,uBAAMV,CAAAA,OAAO,CAAC,oCAAD,CAAP,CAA8CC,OAApD,EAZQ,CAafU,OAAO,CAAE,yBAAMX,CAAAA,OAAO,CAAC,mCAAD,CAAP,CAA6CC,OAAnD,EAbM,CAcfW,MAAM,CAAE,wBAAMZ,CAAAA,OAAO,CAAC,kCAAD,CAAP,CAA4CC,OAAlD,EAdO,CAefY,MAAM,CAAE,wBAAMb,CAAAA,OAAO,CAAC,kCAAD,CAAP,CAA4CC,OAAlD,EAfO,CAAjB,CAiBA,MAAOH,CAAAA,KAAK,CAACD,QAAD,CAAL,EAAP,CACD,CAnBD,C,GAkEqBiB,CAAAA,I,6TACV,iBAUH,KAAKC,KAVF,gCAELC,MAFK,CAELA,MAFK,6BAEI,mBAFJ,oBAGLC,IAHK,aAGLA,IAHK,CAILC,OAJK,aAILA,OAJK,CAKLC,WALK,aAKLA,WALK,8BAMLC,IANK,CAMLA,IANK,2BAME,EANF,kBAOLC,KAPK,aAOLA,KAPK,CAQLC,KARK,aAQLA,KARK,CASFP,KATE,qHAWP,GAAMQ,CAAAA,QAAQ,CAAG3B,OAAO,CAACoB,MAAD,CAAxB,CAEA,MAAOQ,uBAASC,EAAT,GAAgB,KAAhB,CACL,kCACE,SAAS,CAAC,gBADZ,CAEE,KAAK,CAAE,sBACL,CACEC,QAAQ,CAAEN,IADZ,CAEEC,KAAK,CAALA,KAFF,CAGEM,QAAQ,CAAEP,IAAI,CAAG,CAHnB,CAIEQ,UAAU,CAAE,gBAJd,CADK,CAOLN,KAPK,CAFT,iDAWGL,IAAI,CAACY,OAAL,CAAa,GAAb,CAAkB,GAAlB,CAXH,CADK,CAeL,6BAAC,QAAD,0BACMd,KADN,EAEE,IAAI,CAAEK,IAFR,CAGE,KAAK,CAAEC,KAHT,EAIMG,sBAASM,MAAT,CAAgB,CAClBC,GAAG,CAAE,CAACd,IAAI,CAAEC,OAAO,EAAID,IAAlB,CADa,CAElBe,OAAO,CAAE,CAACf,IAAI,CAAEE,WAAW,EAAIF,IAAtB,CAFS,CAAhB,CAJN,mDAfF,CAyBD,C,kBAvC+BgB,eAAMC,a","sourcesContent":["import React from 'react';\nimport {Platform, ViewProps} from 'react-native';\nconst IconSet: any = (iconName: string) => {\n  let icons: any = {\n    material: () => require('react-native-vector-icons/MaterialIcons').default,\n    materialCommunity: () =>\n      require('react-native-vector-icons/MaterialCommunityIcons').default,\n    simpleLine: () =>\n      require('react-native-vector-icons/SimpleLineIcons').default,\n    fa: () => require('react-native-vector-icons/FontAwesome').default,\n    fa5: () => require('react-native-vector-icons/FontAwesome5').default,\n    fa5pro: () => require('react-native-vector-icons/FontAwesome5Pro').default,\n    foundation: () => require('react-native-vector-icons/Foundation').default,\n    evil: () => require('react-native-vector-icons/EvilIcons').default,\n    octicons: () => require('react-native-vector-icons/Octicons').default,\n    ionic: () => require('react-native-vector-icons/Ionicons').default,\n    feather: () => require('react-native-vector-icons/Feather').default,\n    entypo: () => require('react-native-vector-icons/Entypo').default,\n    zocial: () => require('react-native-vector-icons/Zocial').default,\n  };\n  return icons[iconName]();\n};\nexport type IconFontFamily =\n  | 'material'\n  | 'materialCommunity'\n  | 'simpleLine'\n  | 'fa'\n  | 'fa5'\n  | 'fa5pro'\n  | 'foundation'\n  | 'evil'\n  | 'octicons'\n  | 'ionic'\n  | 'feather'\n  | 'entypo'\n  | 'zocial';\ninterface IconProps extends ViewProps {\n  family?: IconFontFamily;\n  name?: string;\n  iosOnly?: string;\n  androidOnly?: string;\n  size?: number;\n  color?: string;\n}\n// const Icon: React.FC<IconProps> = ({\n//   family = 'materialCommunity',\n//   name,\n//   iosOnly,\n//   androidOnly,\n//   size = 24,\n//   color,\n//   ...props\n// }) => {\n//   const IconBase = IconSet(family);\n\n//   return (\n//     <IconBase\n//       {...props}\n//       size={size}\n//       color={color}\n//       {...Platform.select({\n//         ios: {name: iosOnly || name},\n//         android: {name: androidOnly || name},\n//       })}\n//     />\n//   );\n// };\n\nexport default class Icon extends React.PureComponent<IconProps> {\n  render() {\n    const {\n      family = 'materialCommunity',\n      name,\n      iosOnly,\n      androidOnly,\n      size = 24,\n      color,\n      style,\n      ...props\n    } = this.props;\n    const IconBase = IconSet(family);\n\n    return Platform.OS === 'web' ? (\n      <a\n        className=\"material-icons\"\n        style={Object.assign(\n          {\n            fontSize: size,\n            color,\n            maxWidth: size + 4,\n            fontFamily: 'Material icons',\n          },\n          style,\n        )}>\n        {name.replace('-', '_')}\n      </a>\n    ) : (\n      <IconBase\n        {...props}\n        size={size}\n        color={color}\n        {...Platform.select({\n          ios: {name: iosOnly || name},\n          android: {name: androidOnly || name},\n        })}\n      />\n    );\n  }\n}\n"]}
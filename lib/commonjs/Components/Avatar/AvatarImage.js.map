{"version":3,"sources":["AvatarImage.tsx"],"names":["AvatarImage","source","size","padding","elevation","color","backgroundColor","style","containerStyle","theme","props","primary","width","height","borderRadius","StyleSheet","flatten","displayName"],"mappings":"mWAAA,oDACA,yCAQA,4DACA,sC,4GAaA,GAAMA,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAW1C,IAVJC,CAAAA,MAUI,MAVJA,MAUI,gBATJC,IASI,CATJA,IASI,oBATG,EASH,WARJC,OAQI,MARJA,OAQI,CAPJC,SAOI,MAPJA,SAOI,CANJC,KAMI,MANJA,KAMI,CALJC,eAKI,MALJA,eAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,cAGI,MAHJA,cAGI,CAFJC,KAEI,MAFJA,KAEI,CADDC,KACC,gJACJD,KAAK,CAAG,sBAASA,KAAT,CAAR,CACAH,eAAe,CAAGA,eAAe,EAAIG,KAAK,CAACJ,KAAN,CAAYM,OAAjD,CACA,MACE,8BAAC,qBAAD,CAAU,IAAV,EACE,KAAK,CAAE,CACL,CACEC,KAAK,CAAEV,IADT,CAEEW,MAAM,CAAEX,IAFV,CAGEY,YAAY,CAAEZ,IAAI,CAAG,CAHvB,CAIEI,eAAe,CAAfA,eAJF,CAKEH,OAAO,CAAPA,OALF,CADK,CAQL,yCAAqBC,SAAS,EAAI,CAAlC,CARK,CASLI,cATK,CADT,iDAYE,6BAAC,kBAAD,wBACE,MAAM,CAAEP,MADV,CAEE,KAAK,CAAEc,wBAAWC,OAAX,CAAmB,CACxB,CAACJ,KAAK,CAAEV,IAAR,CAAcW,MAAM,CAAEX,IAAtB,CAA4BY,YAAY,CAAEZ,IAAI,CAAG,CAAjD,CADwB,CAExBK,KAFwB,CAAnB,CAFT,EAMMG,KANN,mDAZF,CADF,CAuBD,CArCD,CAsCAV,WAAW,CAACiB,WAAZ,CAA0B,cAA1B,C,aACejB,W","sourcesContent":["import React from 'react';\nimport {\n  Image,\n  Animated,\n  ImageProps,\n  StyleProp,\n  ViewStyle,\n  StyleSheet,\n} from 'react-native';\nimport {elevationShadowStyle} from '../../Helpers/styleGenerator';\nimport {ThemeTypes, useTheme} from '../../Theming';\n\nexport interface AvatarImageProps extends ImageProps {\n  elevation?: number;\n  size?: number;\n  containerStyle?: StyleProp<ViewStyle>;\n  padding?: number;\n  color?: string;\n  dense?: boolean;\n  theme?: ThemeTypes;\n\n  backgroundColor?: string;\n}\nconst AvatarImage: React.FC<AvatarImageProps> = ({\n  source,\n  size = 32,\n  padding,\n  elevation,\n  color,\n  backgroundColor,\n  style,\n  containerStyle,\n  theme,\n  ...props\n}) => {\n  theme = useTheme(theme);\n  backgroundColor = backgroundColor || theme.color.primary;\n  return (\n    <Animated.View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n          padding,\n        },\n        elevationShadowStyle(elevation || 1),\n        containerStyle,\n      ]}>\n      <Image\n        source={source}\n        style={StyleSheet.flatten([\n          {width: size, height: size, borderRadius: size / 2},\n          style,\n        ])}\n        {...props}\n      />\n    </Animated.View>\n  );\n};\nAvatarImage.displayName = 'Avatar.Image';\nexport default AvatarImage;\n"]}
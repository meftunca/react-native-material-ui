{"version":3,"sources":["AvatarIcon.tsx"],"names":["AvatarIcon","icon","size","padding","color","iconFontFamily","backgroundColor","style","containerStyle","elevation","props","minWidth","minHeight","borderRadius","displayName"],"mappings":"mWAAA,oDACA,yCACA,kEACA,sD,2GAyBA,GAAMA,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAWxC,IAVJC,CAAAA,IAUI,MAVJA,IAUI,gBATJC,IASI,CATJA,IASI,oBATG,EASH,WARJC,OAQI,MARJA,OAQI,CAPJC,KAOI,MAPJA,KAOI,0BANJC,cAMI,CANJA,cAMI,8BANa,mBAMb,qBALJC,eAKI,MALJA,eAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,cAGI,MAHJA,cAGI,CAFJC,SAEI,MAFJA,SAEI,CADDC,KACC,uJACJ,MACE,8BAAC,qBAAD,CAAU,IAAV,wBACE,KAAK,CAAE,CACL,CACEC,QAAQ,CAAET,IADZ,CAEEU,SAAS,CAAEV,IAFb,CAGEW,YAAY,CAAEX,IAAI,CAAG,CAHvB,CAIEI,eAAe,CAAfA,eAJF,CAKEH,OAAO,CAAPA,OALF,CADK,CAQL,yCAAqBM,SAAS,EAAI,CAAlC,CARK,CASLD,cATK,CADT,EAYME,KAZN,mDAaE,6BAAC,aAAD,EAAM,IAAI,CAAET,IAAZ,CAAkB,KAAK,CAAEG,KAAzB,CAAgC,MAAM,CAAEC,cAAxC,iDAbF,CADF,CAiBD,CA7BD,CA8BAL,UAAU,CAACc,WAAX,CAAyB,aAAzB,C,aACed,U","sourcesContent":["import React from 'react';\nimport {View, Animated, StyleProp, ViewStyle, ImageStyle} from 'react-native';\nimport Icon from 'Components/Core/Icon';\nimport {elevationShadowStyle} from 'Helpers/styleGenerator';\ninterface AvatarIconProps {\n  elevation?: number;\n  size?: number;\n  style?: StyleProp<ImageStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  padding?: number;\n  color?: string;\n  icon?: string;\n  backgroundColor?: string;\n  iconFontFamily?:\n    | 'materialCommunity'\n    | 'material'\n    | 'simpleLine'\n    | 'fa'\n    | 'fa5'\n    | 'fa5pro'\n    | 'foundation'\n    | 'evil'\n    | 'octicons'\n    | 'ionic'\n    | 'feather'\n    | 'entypo'\n    | 'zocial';\n}\nconst AvatarIcon: React.FC<AvatarIconProps> = ({\n  icon,\n  size = 32,\n  padding,\n  color,\n  iconFontFamily = 'materialCommunity',\n  backgroundColor,\n  style,\n  containerStyle,\n  elevation,\n  ...props\n}) => {\n  return (\n    <Animated.View\n      style={[\n        {\n          minWidth: size,\n          minHeight: size,\n          borderRadius: size / 2,\n          backgroundColor,\n          padding,\n        },\n        elevationShadowStyle(elevation || 1),\n        containerStyle,\n      ]}\n      {...props}>\n      <Icon name={icon} color={color} family={iconFontFamily} />\n    </Animated.View>\n  );\n};\nAvatarIcon.displayName = 'Avatar.Icon';\nexport default AvatarIcon;\n"]}
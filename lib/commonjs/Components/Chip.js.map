{"version":3,"sources":["Chip.tsx"],"names":["AnimatedBaseIcon","Animated","createAnimatedComponent","Icon","Chip","icon","label","avatarSource","variant","color","selectedIcon","elevation","selectedColor","isSelected","onSelect","action","theme","props","primary","animated","type","toValue","undefined","initialValue","easing","Easing","linear","duration","textColor","text","activeBG","alpha","toString","bg","darken","colorAnimate","interpolate","inputRange","outputRange","marginRight","borderRadius","overflow","style","container","root","outlined","borderColor","flat","backgroundColor","marginLeft","role","onPress","alert","isDark","rippleStyle","size","AvatarImage","isLoad","setIsLoad","translate","Value","current","selected","timing","start","thumbnailWrapper","width","height","transform","translateX","thumbnail","StyleSheet","absoluteFillObject","justifyContent","alignItems","marginTop","AnimatedIcon","name","create","flexDirection","flexWrap","padding","alignContent","minHeight","borderWidth","hairlineWidth","borderStyle","marginVertical","marginHorizontal","paddingVertical","paddingHorizontal","margin","marginBottom"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\nimport Text from './Core/Typography';\nimport {\n  StyleSheet,\n  View,\n  ImageBackground,\n  ImageSourcePropType,\n  Animated,\n  Easing,\n} from 'react-native';\nimport Color from 'color';\nimport {IconButtonProps} from './Buttons/IconButton';\nimport Ripple, {RippleProps} from './Core/Ripple';\nimport {blue500} from 'Helpers/palette';\nimport Icon from './Core/Icon';\nimport {useAnimation} from 'Helpers/Hooks';\nimport {ThemeTypes, useTheme} from 'Theming';\nconst AnimatedBaseIcon = Animated.createAnimatedComponent(Icon);\ninterface ChipProps extends RippleProps {\n  avatarSource?: ImageSourcePropType;\n  icon?: string;\n  label?: string;\n  variant?: 'flat' | 'outlined';\n  color?: string;\n  selectedColor?: string;\n  selectedIcon?: string;\n  elevation?: number;\n  isSelected?: boolean;\n  onSelect?: (status: boolean) => void | undefined;\n  action?: (props?: IconButtonProps) => JSX.Element;\n  theme?: ThemeTypes;\n}\nconst Chip: React.FC<ChipProps> = ({\n  icon,\n  label,\n  avatarSource,\n  variant = 'outlined', //\"flat\" or \"outlined\"\n  color,\n  selectedIcon = 'check',\n  elevation = 2,\n  selectedColor,\n  isSelected,\n  onSelect,\n  action,\n  theme,\n  ...props\n}) => {\n  theme = useTheme(theme);\n  color = color || theme.color.primary;\n  selectedColor = color || theme.color.primary;\n  const animated = useAnimation({\n    type: 'timing',\n    toValue: isSelected === undefined && icon ? 20 : isSelected ? 20 : 1,\n    initialValue: 0,\n    easing: Easing.linear,\n    duration: 200,\n  });\n  let textColor = color && isSelected ? color : theme.color.text,\n    activeBG = Color(selectedColor)\n      .alpha(0.15)\n      .toString(),\n    bg = Color('white')\n      .darken(0.15)\n      .toString(),\n    colorAnimate =\n      isSelected === undefined\n        ? textColor\n        : animated.interpolate({\n            inputRange: [0, 20],\n            outputRange: [textColor, selectedColor],\n          });\n  return (\n    <View style={{marginRight: 8, borderRadius: 30, overflow: 'hidden'}}>\n      <Ripple\n        rippleColor={selectedColor}\n        style={[style.container, {marginRight: 0}]}\n        onPress={onSelect ? () => onSelect(!isSelected) : undefined}\n        {...props}>\n        <Animated.View\n          style={[\n            style.root,\n            variant === 'outlined'\n              ? {...style.outlined, borderColor: colorAnimate}\n              : {\n                  ...style.flat,\n                  backgroundColor:\n                    isSelected === undefined\n                      ? bg\n                      : animated.interpolate({\n                          inputRange: [0, 20],\n                          outputRange: [bg, activeBG],\n                        }),\n                  elevation,\n                },\n          ]}>\n          {icon || selectedIcon ? (\n            <AnimatedIcon\n              name={selectedIcon || icon}\n              size={animated}\n              color={colorAnimate}\n              style={{\n                marginLeft: animated.interpolate({\n                  inputRange: [0, 20],\n                  outputRange: [0, 4],\n                }),\n              }}\n            />\n          ) : avatarSource ? (\n            <AvatarImage avatarSource={avatarSource} isSelected={isSelected} />\n          ) : null}\n          <Text\n            style={{...style.text}}\n            color={colorAnimate.toString()}\n            animated\n            variant=\"subtitle1\">\n            {label}\n          </Text>\n          {isSelected === undefined &&\n            action &&\n            action({\n              role: 'chip',\n              onPress: () => {\n                alert('test');\n              },\n              backgroundColor: Color(textColor).isDark()\n                ? Color(textColor)\n                    .alpha(0.6)\n                    .toString()\n                : textColor,\n              color: Color(textColor).isDark() ? 'white' : '#555',\n              rippleStyle: {marginRight: 4},\n              size: 14,\n            })}\n        </Animated.View>\n      </Ripple>\n    </View>\n  );\n};\nconst AvatarImage = ({\n  avatarSource,\n  isSelected,\n}: {\n  avatarSource?: any;\n  isSelected?: boolean;\n}) => {\n  const [isLoad, setIsLoad] = useState(false);\n  const translate = useRef(new Animated.Value(-30)).current;\n  const selected = useRef(new Animated.Value(0)).current;\n  useEffect(() => {\n    if (isLoad)\n      Animated.timing(translate, {\n        toValue: 0,\n        duration: 200,\n        easing: Easing.linear,\n      }).start();\n  }, [isLoad]);\n  useEffect(() => {\n    Animated.timing(selected, {\n      toValue: 0,\n      duration: 200,\n      easing: Easing.linear,\n    }).start();\n  }, [isSelected]);\n  return (\n    <Animated.View\n      style={[\n        isLoad\n          ? style.thumbnailWrapper\n          : {width: 0, height: 0, overflow: 'hidden'},\n        {\n          transform: [{translateX: translate}],\n        },\n      ]}>\n      <ImageBackground\n        onLoadEnd={() => setIsLoad(true)}\n        source={avatarSource}\n        style={style.thumbnail}>\n        <Animated.View\n          style={[\n            StyleSheet.absoluteFillObject,\n            {\n              backgroundColor: 'rgba(0,0,0,.24)',\n              justifyContent: 'center',\n              alignItems: 'center',\n              transform: [{translateX: translate}],\n            },\n          ]}>\n          <Icon\n            name=\"check\"\n            color=\"white\"\n            size={20}\n            style={{marginTop: 4, marginLeft: 4}}\n          />\n        </Animated.View>\n      </ImageBackground>\n    </Animated.View>\n  );\n};\n\nconst AnimatedIcon = ({name, color, ...props}) => {\n  return <AnimatedBaseIcon name={name} color={color} {...props} />;\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginRight: 8,\n    borderRadius: 30,\n  },\n  root: {\n    flexDirection: 'row',\n    // paddingVertical: 2,\n    borderRadius: 50,\n    padding: 4,\n    alignContent: 'center',\n    alignItems: 'center',\n    minHeight: 32,\n  },\n  outlined: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    borderColor: '#777',\n  },\n  action: {\n    marginVertical: 0,\n    marginHorizontal: 0,\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n  },\n  flat: {\n    borderWidth: 0,\n    borderColor: 'transparent',\n  },\n  thumbnailWrapper: {\n    marginRight: 0,\n    borderRadius: 24,\n  },\n  thumbnail: {\n    overflow: 'hidden',\n    margin: 4,\n    marginRight: 0,\n    width: 24,\n    borderRadius: 24,\n    height: 24,\n  },\n  text: {\n    marginHorizontal: 8,\n    marginBottom: 2,\n  },\n});\n\nexport default Chip;\n"]}
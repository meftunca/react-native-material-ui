{"version":3,"sources":["index.tsx"],"names":["BannerWrapper","visible","actions","contentTextProps","contentText","duration","delay","onLayout","height","mount","setMount","animatedValue","type","initialValue","toValue","easing","Easing","bezier","setTimeout","translateEffect","interpolate","inputRange","outputRange","marginBottom","overflow","styles","wrapper","transform","translateY","backgroundColor","textContent","maxWidth","Array","isArray","label","actionsContainer","map","key","otherProps","StyleSheet","create","width","padding","paddingBottom","elevation","minHeight","flexGrow","flexDirection","justifyContent","alignContent","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {View, Animated, StyleSheet, Easing} from 'react-native';\nimport {useAnimation, useLayout} from 'Helpers/Hooks';\nimport Text, {TextProps} from './../Core/Typography';\nimport Button, {ButtonProps} from 'Components/Buttons/Button';\nimport {elevationShadowStyle} from 'Helpers/styleGenerator';\n\ntype actionsProps = ButtonProps & {\n  label: string;\n};\ninterface BannerProps {\n  visible?: boolean;\n  actions?: actionsProps | actionsProps[];\n  contentText?: string;\n  contentTextProps?: TextProps;\n  duration?: number;\n  delay?: number;\n}\n\nconst BannerWrapper: React.FC<BannerProps> = ({\n  visible,\n  actions,\n  contentTextProps,\n  contentText,\n  duration = 300,\n  delay = 0,\n}) => {\n  const {onLayout, height} = useLayout();\n  const [mount, setMount] = useState(false);\n  const animatedValue = useAnimation({\n    type: 'timing',\n    initialValue: 0,\n    toValue: visible ? 1 : 0,\n    easing: visible\n      ? Easing.bezier(0.2, 0.45, 0.78, 1)\n      : Easing.bezier(1, 0.65, 0.3, 0.1),\n    duration,\n    delay,\n    // useNativeDriver: true,\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setMount(true);\n    }, duration);\n  }, []);\n\n  const translateEffect: any =\n      mount === false\n        ? -height || -400\n        : animatedValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [-height, 0],\n          }),\n    marginBottom: any = animatedValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 10],\n    });\n\n  return (\n    <View style={{overflow: 'hidden'}}>\n      <Animated.View\n        onLayout={onLayout}\n        style={[\n          styles.wrapper,\n          {\n            transform: [{translateY: translateEffect}],\n            backgroundColor: 'white',\n            marginBottom,\n            ...elevationShadowStyle(visible ? 2 : 0),\n          },\n        ]}>\n        <View style={styles.textContent}>\n          <View style={{maxWidth: '95%'}}>\n            <Text variant=\"body2\" {...contentTextProps}>\n              {contentText}\n            </Text>\n          </View>\n          {!Array.isArray(actions) && (\n            <Button style={styles.actions} {...actions}>\n              {actions?.label}\n            </Button>\n          )}\n        </View>\n        {Array.isArray(actions) && (\n          <View style={styles.actionsContainer}>\n            {actions?.map(({label, ...otherProps}, key: number) => (\n              <Button style={styles.actions} {...otherProps} key={key}>\n                {label}\n              </Button>\n            ))}\n          </View>\n        )}\n      </Animated.View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: '100%',\n    padding: 16,\n    paddingBottom: 8,\n    elevation: 2,\n    minHeight: 54,\n    flexGrow: 1,\n  },\n  textContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignContent: 'center',\n    alignItems: 'center',\n    // marginBottom: 12,\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  actions: {\n    marginLeft: 8,\n  },\n});\nexport default BannerWrapper;\n"]}
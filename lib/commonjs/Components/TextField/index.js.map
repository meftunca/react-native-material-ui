{"version":3,"sources":["index.tsx"],"names":["TextField","variant","defaultValue","label","value","error","success","warning","count","Left","Right","onChange","disabled","ripple","helperText","bottomWrapperStyle","clearButtonMode","placeholder","min","max","rest","active","nativeEvent","state","setStateBase","labelAnim","Animated","Value","current","setState","newState","length","eventCount","text","_active","timing","toValue","easing","Easing","bezier","duration","start","_passive","_onChange","prop","undefined","borderWidth","variantStyle","backgroundColor","borderTopLeftRadius","borderTopRightRadius","elevation","paddingTop","borderBottomWidth","borderRadius","outlineLabelStyle","width","padding","labelPosArr","labelFontSize","interpolate","inputRange","outputRange","labelLocationTranslateY","colors","Palette","blue500","grey700","red500","amber500","green500","style","StyleSheet","create","container","minHeight","margin","wrapper","borderColor","paddingHorizontal","contentWrapper","flexDirection","alignItems","alignContent","minWidth","position","top","left","labelWrapper","flex","zIndex","fieldInput","flexGrow","height","fontSize","color","bottomWrapper","justifyContent","paddingLeft","paddingRight","helperWrapper","alignSelf","marginVertical","transform","translateY","marginRight","marginLeft","paddingBottom","marginBottom","Keyboard","dismiss"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {\n  View,\n  TextInput,\n  Animated,\n  Easing,\n  StyleSheet,\n  Text,\n  Keyboard,\n  TextInputProps,\n} from 'react-native';\nimport * as Palette from './../../Helpers/palette';\ninterface TextFieldProps extends TextInputProps {\n  variant?: 'outlined' | 'contained' | 'flat';\n  defaultValue?: string;\n  value?: string;\n  label?: string;\n  error?: boolean;\n  success?: boolean;\n  warning?: boolean;\n  count?: boolean;\n  multiLine?: boolean;\n  Left?: any;\n  Right?: any;\n  disabled?: boolean;\n  ripple?: boolean;\n  numberOfLines?: number;\n  helperText?: string;\n  bottomWrapperStyle?: object;\n  clearButtonMode?:\n    | 'never'\n    | 'while-editing'\n    | 'unless-editing'\n    | 'always'\n    | undefined;\n  placeholder?: string;\n  min?: number;\n  max?: number;\n  onChange?: (text: any) => void | null;\n}\n\nconst TextField: React.FC<TextFieldProps> = ({\n  variant,\n  defaultValue,\n  label,\n  value,\n  error,\n  success,\n  warning,\n  count,\n  Left,\n  Right,\n  onChange,\n  disabled,\n  ripple,\n  helperText,\n  bottomWrapperStyle,\n  clearButtonMode,\n  placeholder,\n  min,\n  max,\n  ...rest\n}) => {\n  const [state, setStateBase] = useState<{nativeEvent: any; active: boolean}>({\n    active: false,\n    nativeEvent: {},\n  });\n  const labelAnim = useRef(new Animated.Value(0)).current;\n  const setState = (newState: any) => setStateBase({...state, ...newState});\n  useEffect(() => {\n    let count = value ? value.length : defaultValue ? defaultValue.length : 0;\n    setState({\n      nativeEvent: {eventCount: count, text: value || defaultValue},\n    });\n    count > 0 && _active();\n  }, []);\n  const _active = () => {\n      setState({active: true});\n      Animated.timing(labelAnim, {\n        toValue: 1,\n        easing: Easing.bezier(0.25, 0.5, 0.75, 0.1),\n        duration: 200,\n      }).start();\n    },\n    _passive = () => {\n      if (state.nativeEvent.eventCount > 0) return;\n      setState({active: false});\n      Animated.timing(labelAnim, {\n        toValue: 0,\n        easing: Easing.bezier(1, 0.75, 0.5, 0.25),\n        duration: 200,\n      }).start();\n    },\n    _onChange = (prop: any) => {\n      prop.nativeEvent.eventCount = prop.nativeEvent.text.length;\n      setState({nativeEvent: prop.nativeEvent});\n      if (max != undefined && prop.nativeEvent.text.length > max) return;\n      onChange && onChange(prop);\n    };\n\n  let borderWidth = disabled ? 1.5 : 1,\n    variantStyle =\n      variant === 'contained'\n        ? {\n            backgroundColor: '#fff',\n            borderTopLeftRadius: 4,\n            borderTopRightRadius: 4,\n            elevation: 2,\n            paddingTop: 4,\n            borderBottomWidth: borderWidth,\n          }\n        : variant === 'outlined'\n        ? {\n            backgroundColor: 'transparent',\n            borderRadius: 4,\n            borderWidth: borderWidth,\n            paddingTop: 0,\n          }\n        : {\n            borderBottomWidth: borderWidth,\n            borderRadius: 0,\n          },\n    outlineLabelStyle =\n      variant === 'outlined'\n        ? {\n            //   height: state.active ? 20 : \"auto\",\n            // backgroundColor: state.active ? 'white' : 'transparent',\n            width: 'auto',\n            padding: 3,\n          }\n        : {},\n    labelPosArr =\n      variant == 'outlined'\n        ? [16, -10]\n        : variant == 'contained'\n        ? [24, 8]\n        : [18, -6],\n    labelFontSize = labelAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: [16, 12],\n    }),\n    labelLocationTranslateY = labelAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: labelPosArr,\n    }),\n    colors = state.active ? Palette.blue500 : Palette.grey700;\n  colors = error\n    ? Palette.red500\n    : warning\n    ? Palette.amber500\n    : success\n    ? Palette.green500\n    : colors;\n\n  let style = StyleSheet.create({\n    container: {\n      minHeight: 56,\n      margin: 8,\n      // marginVertical: variant == \"outlined\" ? 8 : 6\n    },\n    wrapper: {\n      borderColor: colors,\n      paddingHorizontal: !variant ? 0 : 12,\n    },\n    contentWrapper: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      alignContent: 'center',\n      minHeight: 56,\n      minWidth: 280,\n      margin: 0,\n      padding: 0,\n    },\n    label: {\n      position: 'absolute',\n      backgroundColor:\n        state.active && variant === 'outlined' ? 'white' : 'transparent',\n      // height: 18,\n      paddingHorizontal: 4,\n      top: 0,\n      left: Left ? 40 : variant === 'contained' ? 10 : !variant ? 0 : 12,\n      // bottom: 6,\n    },\n    labelWrapper: {\n      flex: 1,\n      zIndex: 999,\n      ...outlineLabelStyle,\n    },\n    fieldInput: {\n      flexGrow: 1,\n      height: '100%',\n      fontSize: 16,\n      color: Palette.grey700,\n      // paddingVertical: 8,\n      minHeight: 28,\n      // backgroundColor: 'rgba(0,0,0,.1)',\n    },\n    bottomWrapper: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingLeft: 14,\n      paddingRight: 8,\n      ...bottomWrapperStyle,\n    },\n    helperWrapper: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      alignSelf: 'center',\n      marginVertical: 6,\n    },\n    helperText: {\n      height: 16,\n      color: error || success || warning ? colors : Palette.grey700,\n      fontSize: 12,\n    },\n  });\n  return (\n    <View style={style.container}>\n      <Animated.View style={[style.wrapper, variantStyle]}>\n        {label && (\n          <Animated.View\n            style={[\n              style.label,\n              {\n                transform: [\n                  {\n                    translateY: labelLocationTranslateY,\n                  },\n                ],\n              },\n            ]}>\n            <View style={style.labelWrapper}>\n              <Animated.Text\n                style={{\n                  color: colors,\n                  fontSize: labelFontSize,\n                }}>\n                {label}\n              </Animated.Text>\n            </View>\n          </Animated.View>\n        )}\n        <View style={style.contentWrapper}>\n          {Left && (\n            <Left\n              style={{\n                fontSize: 20,\n                color: colors,\n                marginRight: 4,\n                marginLeft: !variant ? 4 : 0,\n                paddingTop:\n                  variant === 'outlined'\n                    ? 14\n                    : variant === 'contained'\n                    ? 10\n                    : 12,\n                paddingBottom:\n                  variant === 'outlined' ? 4 : variant === 'contained' ? 4 : 4,\n                marginBottom: 4,\n              }}\n            />\n          )}\n          <TextInput\n            placeholderTextColor={Palette.grey700}\n            placeholder={state.active ? '' : placeholder}\n            style={style.fieldInput}\n            onChange={_onChange}\n            onFocus={_active}\n            onBlur={_passive}\n            clearButtonMode={clearButtonMode}\n            //  clearButtonMode={clearButtonMode || \"always\"}\n            blurOnSubmit={true}\n            onSubmitEditing={Keyboard.dismiss}\n            {...rest}\n          />\n          {Right && (\n            <Right\n              style={{\n                fontSize: 20,\n                color: colors,\n                marginLeft: 4,\n                marginRight: !variant ? 4 : 0,\n                // paddingTop: variant === 'outlined' ? 14 : variant === 'contained' ? 10 : 12,\n                // paddingBottom: variant === 'outlined' ? 4 : variant === 'contained' ? 4 : 4,\n                marginBottom: 4,\n              }}\n            />\n          )}\n        </View>\n      </Animated.View>\n      <View style={style.bottomWrapper}>\n        {helperText && (\n          <View style={style.helperWrapper}>\n            <Icon\n              style={{\n                ...style.helperText,\n                marginRight: 8,\n                fontSize: 18,\n              }}\n              name={\n                success\n                  ? 'check'\n                  : error\n                  ? 'bug-outline'\n                  : warning\n                  ? 'alert'\n                  : 'lightbulb-outline'\n              }\n            />\n            <Text style={style.helperText}>{helperText}</Text>\n          </View>\n        )}\n        {count && (\n          <View style={style.helperWrapper}>\n            <Text style={style.helperText}>\n              {state.nativeEvent.eventCount + ' / ' + max}\n            </Text>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default TextField;\n"]}
{"version":3,"sources":["useKeyboard.ts"],"names":["useKeyboard","shown","setShown","start","screenX","screenY","width","height","end","coordinates","setCoordinates","handleKeyboardWillShow","e","startCoordinates","endCoordinates","handleKeyboardDidShow","handleKeyboardWillHide","handleKeyboardDidHide","keyboardWillShowListener","Keyboard","addListener","keyboardDidShowListener","keyboardWillHideListener","keyboardDidHideListener","remove","keyboardShown"],"mappings":"oQAAA,4BACA,yCAEe,QAASA,CAAAA,WAAT,EAAuB,eACV,oBAAS,KAAT,CADU,qDAC7BC,KAD6B,eACtBC,QADsB,8BAEE,oBAGnC,CACDC,KAAK,CAAE,CAAEC,OAAO,CAAE,CAAX,CAAcC,OAAO,CAAE,CAAvB,CAA0BC,KAAK,CAAE,CAAjC,CAAoCC,MAAM,CAAE,CAA5C,CADN,CAEDC,GAAG,CAAE,CAAEJ,OAAO,CAAE,CAAX,CAAcC,OAAO,CAAE,CAAvB,CAA0BC,KAAK,CAAE,CAAjC,CAAoCC,MAAM,CAAE,CAA5C,CAFJ,CAHmC,CAFF,sDAE7BE,WAF6B,eAEhBC,cAFgB,eAUpC,GAAMC,CAAAA,sBAA6C,CAAG,QAAhDA,CAAAA,sBAAgD,CAACC,CAAD,CAAO,CAC3DF,cAAc,CAAC,CAAEP,KAAK,CAAES,CAAC,CAACC,gBAAX,CAA6BL,GAAG,CAAEI,CAAC,CAACE,cAApC,CAAD,CAAd,CACD,CAFD,CAGA,GAAMC,CAAAA,qBAA4C,CAAG,QAA/CA,CAAAA,qBAA+C,CAACH,CAAD,CAAO,CAC1DV,QAAQ,CAAC,IAAD,CAAR,CACAQ,cAAc,CAAC,CAAEP,KAAK,CAAES,CAAC,CAACC,gBAAX,CAA6BL,GAAG,CAAEI,CAAC,CAACE,cAApC,CAAD,CAAd,CACD,CAHD,CAIA,GAAME,CAAAA,sBAA6C,CAAG,QAAhDA,CAAAA,sBAAgD,CAACJ,CAAD,CAAO,CAC3DF,cAAc,CAAC,CAAEP,KAAK,CAAES,CAAC,CAACC,gBAAX,CAA6BL,GAAG,CAAEI,CAAC,CAACE,cAApC,CAAD,CAAd,CACD,CAFD,CAGA,GAAMG,CAAAA,qBAA4C,CAAG,QAA/CA,CAAAA,qBAA+C,CAACL,CAAD,CAAO,CAC1DV,QAAQ,CAAC,KAAD,CAAR,CACAQ,cAAc,CAAC,CAAEP,KAAK,CAAES,CAAC,CAACC,gBAAX,CAA6BL,GAAG,CAAEI,CAAC,CAACE,cAApC,CAAD,CAAd,CACD,CAHD,CAKA,qBAAU,UAAM,CACd,GAAMI,CAAAA,wBAAwB,CAAGC,sBAASC,WAAT,CAC/B,kBAD+B,CAE/BT,sBAF+B,CAAjC,CAIA,GAAMU,CAAAA,uBAAuB,CAAGF,sBAASC,WAAT,CAC9B,iBAD8B,CAE9BL,qBAF8B,CAAhC,CAIA,GAAMO,CAAAA,wBAAwB,CAAGH,sBAASC,WAAT,CAC/B,kBAD+B,CAE/BJ,sBAF+B,CAAjC,CAIA,GAAMO,CAAAA,uBAAuB,CAAGJ,sBAASC,WAAT,CAC9B,iBAD8B,CAE9BH,qBAF8B,CAAhC,CAKA,MAAO,WAAM,CACXC,wBAAwB,CAACM,MAAzB,GACAH,uBAAuB,CAACG,MAAxB,GACAF,wBAAwB,CAACE,MAAzB,GACAD,uBAAuB,CAACC,MAAxB,GACD,CALD,CAMD,CAxBD,CAwBG,EAxBH,EA0BA,MAAO,CACLC,aAAa,CAAExB,KADV,CAELQ,WAAW,CAAXA,WAFK,CAAP,CAID","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Keyboard, KeyboardEventListener, ScreenRect } from 'react-native'\n\nexport default function useKeyboard() {\n  const [shown, setShown] = useState(false)\n  const [coordinates, setCoordinates] = useState<{\n    start: ScreenRect\n    end: ScreenRect\n  }>({\n    start: { screenX: 0, screenY: 0, width: 0, height: 0 },\n    end: { screenX: 0, screenY: 0, width: 0, height: 0 },\n  })\n\n  const handleKeyboardWillShow: KeyboardEventListener = (e) => {\n    setCoordinates({ start: e.startCoordinates, end: e.endCoordinates })\n  }\n  const handleKeyboardDidShow: KeyboardEventListener = (e) => {\n    setShown(true)\n    setCoordinates({ start: e.startCoordinates, end: e.endCoordinates })\n  }\n  const handleKeyboardWillHide: KeyboardEventListener = (e) => {\n    setCoordinates({ start: e.startCoordinates, end: e.endCoordinates })\n  }\n  const handleKeyboardDidHide: KeyboardEventListener = (e) => {\n    setShown(false)\n    setCoordinates({ start: e.startCoordinates, end: e.endCoordinates })\n  }\n\n  useEffect(() => {\n    const keyboardWillShowListener = Keyboard.addListener(\n      'keyboardWillShow',\n      handleKeyboardWillShow,\n    )\n    const keyboardDidShowListener = Keyboard.addListener(\n      'keyboardDidShow',\n      handleKeyboardDidShow,\n    )\n    const keyboardWillHideListener = Keyboard.addListener(\n      'keyboardWillHide',\n      handleKeyboardWillHide,\n    )\n    const keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      handleKeyboardDidHide,\n    )\n\n    return () => {\n      keyboardWillShowListener.remove()\n      keyboardDidShowListener.remove()\n      keyboardWillHideListener.remove()\n      keyboardDidHideListener.remove()\n    }\n  }, [])\n\n  return {\n    keyboardShown: shown,\n    coordinates,\n  }\n}\n"]}
{"version":3,"sources":["useToggle.tsx"],"names":["useCallback","useState","useToggle","initialValue","value","setValue","toggle","nextValue","currentValue"],"mappings":"iEAAA,OAAQA,WAAR,CAAqBC,QAArB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAChBC,YADgB,CAEyB,eACfF,QAAQ,CAAUE,YAAV,CADO,wCAClCC,KADkC,eAC3BC,QAD2B,eAGzC,GAAMC,CAAAA,MAAM,CAAGN,WAAW,CACxB,SAACO,SAAD,CAAqB,CACnB,GAAI,MAAOA,CAAAA,SAAP,GAAqB,SAAzB,CAAoC,CAClCF,QAAQ,CAACE,SAAD,CAAR,CACD,CAFD,IAEO,CACLF,QAAQ,CAAC,SAAAG,YAAY,QAAI,CAACA,YAAL,EAAb,CAAR,CACD,CACF,CAPuB,CAQxB,CAACH,QAAD,CARwB,CAA1B,CAWA,MAAO,CAACD,KAAD,CAAQE,MAAR,CAAP,CACD,CAjBD,CAmBA,cAAeJ,CAAAA,SAAf","sourcesContent":["import {useCallback, useState} from 'react';\n\nconst useToggle = (\n  initialValue: boolean,\n): [boolean, (nextValue?: any) => void] => {\n  const [value, setValue] = useState<boolean>(initialValue);\n\n  const toggle = useCallback(\n    (nextValue?: any) => {\n      if (typeof nextValue === 'boolean') {\n        setValue(nextValue);\n      } else {\n        setValue(currentValue => !currentValue);\n      }\n    },\n    [setValue],\n  );\n\n  return [value, toggle];\n};\n\nexport default useToggle;\n"]}
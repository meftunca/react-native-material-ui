{"version":3,"sources":["useSetState.ts"],"names":["useCallback","useState","useSetState","initialState","state","set","setState","patch","prevState","Function"],"mappings":"sHAAA,OAAQA,WAAR,CAAqBC,QAArB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAEoD,IADtEC,CAAAA,YACsE,2DADpD,EACoD,eACjDF,QAAQ,CAAIE,YAAJ,CADyC,wCAC/DC,KAD+D,eACxDC,GADwD,eAEtE,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,CAC1B,SAAAO,KAAK,CAAI,CACPF,GAAG,CAAC,SAAAG,SAAS,QACX,UACE,EADF,CAEEA,SAFF,CAGED,KAAK,WAAYE,CAAAA,QAAjB,CAA4BF,KAAK,CAACC,SAAD,CAAjC,CAA+CD,KAHjD,CADW,EAAV,CAAH,CAOD,CATyB,CAU1B,CAACF,GAAD,CAV0B,CAA5B,CAaA,MAAO,CAACD,KAAD,CAAQE,QAAR,CAAP,CACD,CAlBD,CAoBA,cAAeJ,CAAAA,WAAf","sourcesContent":["import {useCallback, useState} from 'react';\n\nconst useSetState = <T extends object>(\n  initialState: T = {} as T,\n): [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void] => {\n  const [state, set] = useState<T>(initialState);\n  const setState = useCallback(\n    patch => {\n      set(prevState =>\n        Object.assign(\n          {},\n          prevState,\n          patch instanceof Function ? patch(prevState) : patch,\n        ),\n      );\n    },\n    [set],\n  );\n\n  return [state, setState];\n};\n\nexport default useSetState;\n"]}
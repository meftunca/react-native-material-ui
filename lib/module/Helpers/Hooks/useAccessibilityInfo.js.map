{"version":3,"sources":["useAccessibilityInfo.tsx"],"names":["useEffect","useState","AccessibilityInfo","useAccessibilityInfo","reduceMotionEnabled","setReduceMotionEnabled","screenReaderEnabled","setScreenReaderEnabled","handleReduceMotionChanged","enabled","handleScreenReaderChanged","isReduceMotionEnabled","then","isScreenReaderEnabled","addEventListener","removeEventListener"],"mappings":"iEAAA,OAAeA,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OACEC,iBADF,KAIO,cAJP,CAMA,cAAe,SAASC,CAAAA,oBAAT,EAAgC,eACSF,QAAQ,CAAC,KAAD,CADjB,wCACtCG,mBADsC,eACjBC,sBADiB,8BAESJ,QAAQ,CAAC,KAAD,CAFjB,yCAEtCK,mBAFsC,eAEjBC,sBAFiB,eAI7C,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,OAAD,QAChCJ,CAAAA,sBAAsB,CAACI,OAAD,CADU,EAAlC,CAEA,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACD,OAAD,QAChCF,CAAAA,sBAAsB,CAACE,OAAD,CADU,EAAlC,CAGAT,SAAS,CAAC,UAAM,CACdE,iBAAiB,CAACS,qBAAlB,GAA0CC,IAA1C,CAA+CJ,yBAA/C,EACAN,iBAAiB,CAACW,qBAAlB,GAA0CD,IAA1C,CAA+CF,yBAA/C,EAEAR,iBAAiB,CAACY,gBAAlB,CACE,qBADF,CAEEN,yBAFF,EAIAN,iBAAiB,CAACY,gBAAlB,CACE,qBADF,CAEEJ,yBAFF,EAKA,MAAO,WAAM,CACXR,iBAAiB,CAACa,mBAAlB,CACE,qBADF,CAEEP,yBAFF,EAIAN,iBAAiB,CAACa,mBAAlB,CACE,qBADF,CAEEL,yBAFF,EAID,CATD,CAUD,CAvBQ,CAuBN,EAvBM,CAAT,CAyBA,MAAO,CAACN,mBAAmB,CAAnBA,mBAAD,CAAsBE,mBAAmB,CAAnBA,mBAAtB,CAAP,CACD","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {\n  AccessibilityInfo,\n  AccessibilityChangeEvent,\n  AccessibilityEvent,\n} from 'react-native';\n\nexport default function useAccessibilityInfo() {\n  const [reduceMotionEnabled, setReduceMotionEnabled] = useState(false);\n  const [screenReaderEnabled, setScreenReaderEnabled] = useState(false);\n\n  const handleReduceMotionChanged = (enabled: AccessibilityChangeEvent) =>\n    setReduceMotionEnabled(enabled);\n  const handleScreenReaderChanged = (enabled: AccessibilityChangeEvent) =>\n    setScreenReaderEnabled(enabled);\n\n  useEffect(() => {\n    AccessibilityInfo.isReduceMotionEnabled().then(handleReduceMotionChanged);\n    AccessibilityInfo.isScreenReaderEnabled().then(handleScreenReaderChanged);\n\n    AccessibilityInfo.addEventListener(\n      'reduceMotionChanged',\n      handleReduceMotionChanged as (event: AccessibilityEvent) => void,\n    );\n    AccessibilityInfo.addEventListener(\n      'screenReaderChanged',\n      handleScreenReaderChanged as (event: AccessibilityEvent) => void,\n    );\n\n    return () => {\n      AccessibilityInfo.removeEventListener(\n        'reduceMotionChanged',\n        handleReduceMotionChanged as (event: AccessibilityEvent) => void,\n      );\n      AccessibilityInfo.removeEventListener(\n        'screenReaderChanged',\n        handleScreenReaderChanged as (event: AccessibilityEvent) => void,\n      );\n    };\n  }, []);\n\n  return {reduceMotionEnabled, screenReaderEnabled};\n}\n"]}
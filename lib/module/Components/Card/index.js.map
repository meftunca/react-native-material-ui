{"version":3,"sources":["index.tsx"],"names":["React","View","PixelRatio","Surface","Text","roundPixel","roundToNearestPixel","DefaultSurface","direction","justify","alignContent","alignItems","padding","margin","Header","children","left","right","title","subtitle","titleProps","subtitleProps","otherProps","undefined","style","marginRight","size","flex","marginLeft","justifyContent","Content","Actions","width","flexDirection","paddingHorizontal","marginBottom","displayName","Card","theme","Array","isArray","Children","map","Child","isValidElement","cloneElement"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, PixelRatio, ViewProps, StyleProp, ImageStyle} from 'react-native';\nimport Surface, {SurfaceProps} from './../Core/Surface';\nimport Text, {TextProps} from './../Core/Typography';\nimport {ThemeTypes} from '../../Theming';\nconst roundPixel: number = PixelRatio.roundToNearestPixel(1);\nconst DefaultSurface: SurfaceProps = {\n  direction: 'column',\n  justify: 'flex-start',\n  alignContent: 'flex-start',\n  alignItems: 'flex-start',\n  padding: 16,\n  margin: 0,\n};\n\ninterface HeaderProps extends SurfaceProps {\n  left?: React.FC<{size?: number; style?: StyleProp<ImageStyle>}>;\n  right?: React.FC<{size?: number; style?: StyleProp<ImageStyle>}>;\n  title?: JSX.Element | string;\n  subtitle?: JSX.Element | string;\n  titleProps?: TextProps;\n  subtitleProps?: TextProps;\n}\nconst Header: React.FC<HeaderProps> = ({\n  children,\n  left,\n  right,\n  title,\n  subtitle,\n  titleProps,\n  subtitleProps,\n  ...otherProps\n}) => {\n  return (\n    <Surface\n      {...DefaultSurface}\n      padding={[12, 16]}\n      direction=\"row\"\n      alignItems=\"center\"\n      {...otherProps}>\n      {left !== undefined ? left({style: {marginRight: 16}, size: 40}) : <></>}\n      <View\n        style={{\n          flex: 1,\n          marginLeft: left ? 16 : 0,\n          justifyContent: 'center',\n        }}>\n        {title && (\n          <>\n            {typeof title === 'string' ? (\n              <Text\n                transform=\"capitalize\"\n                variant=\"h6\"\n                contrast={0.7}\n                gutterBottom={4}\n                {...titleProps}>\n                {title}\n              </Text>\n            ) : (\n              title\n            )}\n          </>\n        )}\n        {subtitle && (\n          <>\n            {typeof subtitle === 'string' ? (\n              <Text\n                transform=\"capitalize\"\n                variant=\"subtitle2\"\n                contrast={0.5}\n                {...subtitleProps}>\n                {subtitle}\n              </Text>\n            ) : (\n              subtitle\n            )}\n          </>\n        )}\n      </View>\n      {right !== undefined ? right({}) : <></>}\n    </Surface>\n  );\n};\nconst Content: React.FC<SurfaceProps> = ({children, ...otherProps}) => (\n  <Surface {...DefaultSurface} {...otherProps}>\n    {children}\n  </Surface>\n);\nconst Actions: React.FC<ViewProps> = ({children, style, ...otherProps}) => (\n  <View\n    style={[\n      {\n        width: '100%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        paddingHorizontal: 8,\n        marginBottom: 8,\n      },\n      style,\n    ]}\n    {...otherProps}>\n    {children}\n  </View>\n);\ninterface WrapProps extends SurfaceProps {\n  Header: React.FC<HeaderProps>;\n  Content: React.FC<SurfaceProps>;\n  Actions: React.FC<SurfaceProps>;\n}\nHeader.displayName = 'Header';\nContent.displayName = 'Content';\nActions.displayName = 'Actions';\nconst Card: React.FC<SurfaceProps & {theme?: ThemeTypes}> & WrapProps = ({\n  children,\n  theme,\n  ...otherProps\n}) => (\n  <Surface\n    theme={theme}\n    direction=\"column\"\n    padding={0}\n    margin={0}\n    alignItems=\"flex-start\"\n    elevation={2}\n    {...otherProps}>\n    {Array.isArray(children)\n      ? React.Children.map(children, Child => {\n          return React.isValidElement(Child)\n            ? React.cloneElement(Child, {})\n            : Child;\n        })\n      : children}\n  </Surface>\n);\n\nCard.Header = Header;\nCard.Content = Content;\nCard.Actions = Actions;\nexport default Card;\n"]}
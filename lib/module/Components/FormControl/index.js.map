{"version":3,"sources":["index.tsx"],"names":["React","useState","useEffect","useRef","View","Animated","Easing","Palette","Icon","Color","Ripple","FormControl","type","color","blue500","size","disabled","selected","setSelected","selectAnimation","Value","current","timing","toValue","duration","easing","cubic","start","alignSelf","borderRadius","overflow","undefined","padding","width","height","backgroundColor","fade","alpha","toString","borderColor","interpolate","inputRange","outputRange","darken","borderWidth","alignItems","justifyContent","alignContent","marginTop","marginLeft","isDark"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {View, Animated, Easing} from 'react-native';\nimport * as Palette from './../../Helpers/palette';\nimport Icon from '../Core/Icon';\nimport Color from 'color';\nimport Ripple from '../Core/Ripple';\nconst FormControl = ({\n  type = 'checkbox',\n  color = Palette.blue500,\n  size = 16,\n  disabled = false,\n}: {\n  type?: 'checkbox' | 'radio';\n  color?: string;\n  size?: number;\n  disabled?: boolean;\n}) => {\n  const [selected, setSelected] = useState(false);\n  const selectAnimation = useRef(new Animated.Value(selected ? size : 0))\n    .current;\n  useEffect(() => {\n    Animated.timing(selectAnimation, {\n      toValue: selected ? size : 0,\n      duration: 100,\n      easing: Easing.cubic,\n    }).start();\n  }, [selected]);\n  return (\n    <View\n      style={{\n        alignSelf: 'flex-start',\n        borderRadius: 30,\n        overflow: 'hidden',\n        // opacity: disabled ? 0.5 : 1,\n      }}>\n      <Ripple\n        rippleSequential\n        rippleColor={disabled ? '#111111' : color}\n        onPress={disabled === false ? () => setSelected(!selected) : undefined}\n        style={{padding: 10}}>\n        <Animated.View\n          style={{\n            overflow: 'hidden',\n            borderRadius: type === 'radio' ? 30 : 2,\n            width: size,\n            height: size,\n            backgroundColor: disabled\n              ? Color('#111111')\n                  .fade(0.7)\n                  .alpha(0.1)\n                  .toString()\n              : 'transparent',\n            borderColor: disabled\n              ? Color('#111111')\n                  .fade(0.4)\n                  .alpha(0.2)\n                  .toString()\n              : selectAnimation.interpolate({\n                  inputRange: [0, 12],\n                  outputRange: [\n                    '#111111',\n                    disabled\n                      ? Color(color)\n                          .darken(0.8)\n                          .fade(0.5)\n                          .toString()\n                      : color,\n                  ],\n                }),\n            borderWidth: type === 'radio' ? 1.5 : 1.5,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <Animated.View\n            style={[\n              {\n                borderRadius: type === 'radio' ? 30 : 0,\n                width: selectAnimation,\n                height: selectAnimation,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n                backgroundColor: disabled\n                  ? Color(color)\n                      .darken(0.8)\n                      .fade(0.8)\n                      .toString()\n                  : color,\n              },\n            ]}>\n            {type === 'checkbox' && selected && (\n              <Icon\n                name=\"check\"\n                size={size - 4}\n                style={{marginTop: 1.5, marginLeft: 1}}\n                color={\n                  disabled && selected\n                    ? Color(color)\n                        .darken(0.8)\n                        .fade(0.8)\n                        .toString()\n                    : Color(color).isDark()\n                    ? 'white'\n                    : 'black'\n                }\n              />\n            )}\n          </Animated.View>\n        </Animated.View>\n      </Ripple>\n    </View>\n  );\n};\nexport default FormControl;\n"]}
{"version":3,"sources":["Chip.tsx"],"names":["React","useRef","useEffect","useState","Text","StyleSheet","View","ImageBackground","Animated","Easing","Icon","Color","Ripple","blue500","Chip","icon","label","avatarSource","variant","color","selectedIcon","elevation","selectedColor","isSelected","action","props","textColor","marginRight","borderRadius","overflow","style","container","root","outlined","borderColor","flat","backgroundColor","alpha","toString","darken","marginLeft","text","undefined","isDark","size","AvatarImage","isLoad","setIsLoad","translate","Value","current","selected","timing","toValue","duration","easing","linear","start","thumbnailWrapper","width","height","transform","translateX","thumbnail","absoluteFillObject","justifyContent","alignItems","marginTop","create","flexDirection","flexWrap","padding","alignContent","minHeight","borderWidth","hairlineWidth","borderStyle","marginVertical","marginHorizontal","paddingVertical","paddingHorizontal","margin","marginBottom"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\nimport Text from './Core/Typography';\nimport {\n  StyleSheet,\n  View,\n  ImageBackground,\n  ImageSourcePropType,\n  Animated,\n  Easing,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Color from 'color';\nimport {IconButtonProps} from './Buttons/IconButton';\nimport Ripple, {RippleProps} from './Core/Ripple';\nimport {blue500} from 'Helpers/palette';\ninterface ChipProps extends RippleProps {\n  avatarSource?: ImageSourcePropType;\n  icon?: string;\n  label?: string;\n  variant?: 'flat' | 'outlined';\n  color?: string;\n  selectedColor?: string;\n  selectedIcon?: string;\n  elevation?: number;\n  isSelected?: boolean;\n  action?: (props?: IconButtonProps) => JSX.Element;\n}\nconst Chip: React.FC<ChipProps> = ({\n  icon,\n  label,\n  avatarSource,\n  variant = 'outlined', //\"flat\" or \"outlined\"\n  color = '#000',\n  selectedIcon = 'check',\n  elevation = 2,\n  selectedColor = blue500,\n  isSelected,\n  action,\n  ...props\n}) => {\n  let textColor = isSelected ? selectedColor : color ? color : '#444';\n  return (\n    <View style={{marginRight: 8, borderRadius: 30, overflow: 'hidden'}}>\n      <Ripple\n        rippleColor={selectedColor}\n        style={[style.container, {marginRight: 0}]}\n        {...props}>\n        <View\n          style={[\n            style.root,\n            variant === 'outlined'\n              ? {...style.outlined, borderColor: textColor}\n              : {\n                  ...style.flat,\n                  backgroundColor: isSelected\n                    ? Color(selectedColor)\n                        .alpha(0.15)\n                        .toString()\n                    : Color('white')\n                        .darken(0.15)\n                        .toString(),\n                  elevation,\n                },\n          ]}>\n          {icon ? (\n            <Icon\n              name={isSelected ? selectedIcon : icon}\n              size={18}\n              color={textColor}\n              style={{marginLeft: 4}}\n            />\n          ) : avatarSource ? (\n            <AvatarImage avatarSource={avatarSource} isSelected={isSelected} />\n          ) : null}\n          <Text style={style.text} color={textColor} variant=\"subtitle1\">\n            {label}\n          </Text>\n          <View>\n            {isSelected === undefined &&\n              action &&\n              action({\n                backgroundColor: Color(textColor).isDark()\n                  ? Color(textColor)\n                      .alpha(0.6)\n                      .toString()\n                  : textColor,\n                color: Color(textColor).isDark() ? 'white' : '#555',\n                size: 14,\n              })}\n          </View>\n        </View>\n      </Ripple>\n    </View>\n  );\n};\nconst AvatarImage = ({\n  avatarSource,\n  isSelected,\n}: {\n  avatarSource?: any;\n  isSelected?: boolean;\n}) => {\n  const [isLoad, setIsLoad] = useState(false);\n  const translate = useRef(new Animated.Value(-30)).current;\n  const selected = useRef(new Animated.Value(0)).current;\n  useEffect(() => {\n    if (isLoad)\n      Animated.timing(translate, {\n        toValue: 0,\n        duration: 200,\n        easing: Easing.linear,\n      }).start();\n  }, [isLoad]);\n  useEffect(() => {\n    Animated.timing(selected, {\n      toValue: 0,\n      duration: 200,\n      easing: Easing.linear,\n    }).start();\n  }, [isSelected]);\n  return (\n    <Animated.View\n      style={[\n        isLoad\n          ? style.thumbnailWrapper\n          : {width: 0, height: 0, overflow: 'hidden'},\n        {\n          transform: [{translateX: translate}],\n        },\n      ]}>\n      <ImageBackground\n        onLoadEnd={() => setIsLoad(true)}\n        source={avatarSource}\n        style={style.thumbnail}>\n        <Animated.View\n          style={[\n            StyleSheet.absoluteFillObject,\n            {\n              backgroundColor: 'rgba(0,0,0,.24)',\n              justifyContent: 'center',\n              alignItems: 'center',\n              transform: [{translateX: translate}],\n            },\n          ]}>\n          <Icon\n            name=\"check\"\n            color=\"white\"\n            size={20}\n            style={{marginTop: 4, marginLeft: 4}}\n          />\n        </Animated.View>\n      </ImageBackground>\n    </Animated.View>\n  );\n};\nconst style = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginRight: 8,\n    borderRadius: 30,\n  },\n  root: {\n    flexDirection: 'row',\n    // paddingVertical: 2,\n    borderRadius: 50,\n    padding: 4,\n    alignContent: 'center',\n    alignItems: 'center',\n    minHeight: 32,\n  },\n  outlined: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    borderColor: '#777',\n  },\n  action: {\n    marginVertical: 0,\n    marginHorizontal: 0,\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n  },\n  flat: {\n    borderWidth: 0,\n    borderColor: 'transparent',\n  },\n  thumbnailWrapper: {\n    marginRight: 0,\n    borderRadius: 24,\n  },\n  thumbnail: {\n    overflow: 'hidden',\n    margin: 4,\n    marginRight: 0,\n    width: 24,\n    borderRadius: 24,\n    height: 24,\n  },\n  text: {\n    marginHorizontal: 8,\n    marginBottom: 2,\n  },\n});\n\nexport default Chip;\n"]}
{"version":3,"sources":["index.tsx"],"names":["React","View","PixelRatio","StatusBar","Surface","Text","BackDropModal","roundPixel","roundToNearestPixel","DefaultSurface","direction","justify","alignContent","alignItems","padding","margin","Header","children","left","right","title","fullScreen","subtitle","titleProps","subtitleProps","otherProps","style","size","flex","marginHorizontal","justifyContent","Content","Actions","width","flexDirection","Children","map","Child","isValidElement","cloneElement","transform","textProps","weight","contrast","displayName","Dialog","visible","animationType","backdropColor","onClose","duration","delay","minHeight","height","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  PixelRatio,\n  ViewProps,\n  StyleProp,\n  ImageStyle,\n  StatusBar,\n} from 'react-native';\nimport Surface, {SurfaceProps} from '../Core/Surface';\nimport Text, {TextProps} from '../Core/Typography';\nimport BackDropModal from '../Core/BackDropModal';\nconst roundPixel: number = PixelRatio.roundToNearestPixel(1);\nconst DefaultSurface: SurfaceProps = {\n  direction: 'column',\n  justify: 'flex-start',\n  alignContent: 'flex-start',\n  alignItems: 'flex-start',\n  padding: [8, 16],\n  margin: 0,\n};\n\ninterface HeaderProps extends SurfaceProps {\n  left?: React.FC<{size?: number; style?: StyleProp<ImageStyle>}>;\n  right?: React.FC<{size?: number; style?: StyleProp<ImageStyle>}>;\n  title?: JSX.Element | string;\n  subtitle?: JSX.Element | string;\n  titleProps?: TextProps;\n  subtitleProps?: TextProps;\n  fullScreen?: boolean;\n}\nconst Header: React.FC<HeaderProps> = ({\n  children,\n  left,\n  right,\n  title,\n  fullScreen,\n  subtitle,\n  titleProps,\n  subtitleProps,\n  ...otherProps\n}) => {\n  return (\n    <Surface\n      {...DefaultSurface}\n      padding={[16, 8, 8, fullScreen ? 16 : 24]}\n      margin={4}\n      direction=\"row\"\n      alignItems=\"center\"\n      {...otherProps}>\n      {left ? left({style: {margin: 4}, size: 48}) : <></>}\n      <View\n        style={{\n          flex: 1,\n          marginHorizontal: left ? 8 : 0,\n          justifyContent: 'center',\n        }}>\n        {title && (\n          <>\n            {typeof title === 'string' ? (\n              <Text\n                transform=\"capitalize\"\n                variant=\"h6\"\n                gutterBottom={2}\n                contrast={0.87}\n                {...titleProps}>\n                {title}\n              </Text>\n            ) : (\n              title\n            )}\n          </>\n        )}\n        {subtitle && (\n          <>\n            {typeof subtitle === 'string' ? (\n              <Text\n                transform=\"capitalize\"\n                variant=\"subtitle2\"\n                contrast={0.6}\n                {...subtitleProps}>\n                {subtitle}\n              </Text>\n            ) : (\n              subtitle\n            )}\n          </>\n        )}\n      </View>\n      {right ? right({}) : <></>}\n    </Surface>\n  );\n};\nconst Content: React.FC<SurfaceProps & {fullScreen?: boolean}> = ({\n  children,\n  fullScreen,\n  ...otherProps\n}) => (\n  <Surface\n    {...DefaultSurface}\n    margin={[8, 8, 8, fullScreen ? 16 : 24]}\n    style={{flex: 1}}\n    {...otherProps}>\n    {children}\n  </Surface>\n);\nconst Actions: React.FC<ViewProps> = ({children, style, ...otherProps}) => (\n  <View\n    style={[\n      {\n        width: '100%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        padding: 8 / roundPixel,\n      },\n      style,\n    ]}\n    {...otherProps}>\n    {children &&\n      React.Children.map(children, Child => {\n        return React.isValidElement(Child)\n          ? React.cloneElement(Child, {\n              transform: 'uppercase',\n              textProps: {weight: '500', contrast: 1},\n            })\n          : Child;\n      })}\n  </View>\n);\ninterface WrapProps {\n  Header: React.FC<HeaderProps>;\n  Content: React.FC<SurfaceProps>;\n  Actions: React.FC<SurfaceProps>;\n}\ninterface DialogProps extends SurfaceProps {\n  visible?: boolean;\n  backdropColor?: string;\n  onClose?: () => void | undefined;\n  fullScreen?: boolean;\n  animationType?: 'fade' | 'slide' | 'none';\n  duration?: number;\n  delay?: number;\n}\nHeader.displayName = 'Header';\nContent.displayName = 'Content';\nActions.displayName = 'Actions';\nconst Dialog: React.FC<DialogProps> & WrapProps = ({\n  children,\n  visible,\n  animationType,\n  fullScreen = false,\n  backdropColor = 'rgba(0,0,0,.55)',\n  onClose,\n  duration = 300,\n  delay,\n  ...otherProps\n}) => {\n  return (\n    <BackDropModal\n      visible={visible}\n      fullScreen={fullScreen}\n      onClose={onClose}\n      duration={duration}\n      delay={delay}\n      backdropColor={backdropColor}\n      animationType={fullScreen ? 'slide' : animationType}>\n      {fullScreen && (\n        <StatusBar backgroundColor=\"white\" barStyle=\"dark-content\" />\n      )}\n      <Surface\n        direction=\"column\"\n        padding={0}\n        margin={0}\n        alignItems=\"flex-start\"\n        elevation={0}\n        style={[\n          {minHeight: 110, justifyContent: 'space-between'},\n          fullScreen && {height: '100%'},\n        ]}\n        {...otherProps}>\n        {children &&\n          React.Children.map(children, (Child, index) => {\n            return React.isValidElement(Child)\n              ? React.cloneElement(Child, {fullScreen})\n              : Child;\n          })}\n      </Surface>\n    </BackDropModal>\n  );\n};\nDialog.Header = Header;\nDialog.Content = Content;\nDialog.Actions = Actions;\nexport default Dialog;\n"]}
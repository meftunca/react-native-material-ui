{"version":3,"sources":["PaginationItem.tsx"],"names":["React","useRef","useEffect","Animated","Easing","StyleSheet","blue200","PaginationItem","active","animate","Value","current","setWidth","val","timing","toValue","duration","easing","linear","start","animateStyle","flatten","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","style","pagination","create","height","width","marginHorizontal","borderRadius"],"mappings":"iHAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,QAAR,CAAkBC,MAAlB,CAA0BC,UAA1B,KAA2C,cAA3C,CACA,OAAQC,OAAR,KAAsB,iBAAtB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAkD,IAAhDC,CAAAA,MAAgD,MAAhDA,MAAgD,CACvE,GAAMC,CAAAA,OAAO,CAAGR,MAAM,CAAC,GAAIE,CAAAA,QAAQ,CAACO,KAAb,CAAmBF,MAAM,CAAG,CAAH,CAAO,CAAhC,CAAD,CAAN,CAA2CG,OAA3D,CACAT,SAAS,CAAC,UAAM,CACdU,QAAQ,CAACJ,MAAM,CAAG,CAAH,CAAO,CAAd,CAAR,CACD,CAFQ,CAEN,CAACA,MAAD,CAFM,CAAT,CAGA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAiB,CAChCV,QAAQ,CAACW,MAAT,CAAgBL,OAAhB,CAAyB,CACvBM,OAAO,CAAEF,GADc,CAEvBG,QAAQ,CAAE,GAFa,CAGvBC,MAAM,CAAEb,MAAM,CAACc,MAHQ,CAAzB,EAKGC,KALH,GAMD,CAPD,CAQA,GAAMC,CAAAA,YAAY,CAAGf,UAAU,CAACgB,OAAX,CAAmB,CACtCZ,OAAO,CAAE,CACPa,iBAAiB,CAAEb,OADZ,CAEPc,eAAe,CAAEd,OAAO,CAACe,WAAR,CAAoB,CACnCC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CADuB,CAEnCC,WAAW,CAAE,CAAC,SAAD,CAAYpB,OAAZ,CAFsB,CAApB,CAFV,CAD6B,CAAnB,CAArB,CASA,MAAO,qBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACqB,KAAK,CAACC,UAAP,CAAmBR,YAAY,CAACX,OAAhC,CAAtB,iDAAP,CACD,CAvBD,CAwBA,GAAMkB,CAAAA,KAAK,CAAGtB,UAAU,CAACwB,MAAX,CAAkB,CAC9BD,UAAU,CAAE,CACVE,MAAM,CAAE,CADE,CAEVC,KAAK,CAAE,CAFG,CAGVC,gBAAgB,CAAE,CAHR,CAIVC,YAAY,CAAE,EAJJ,CAKVV,eAAe,CAAE,SALP,CADkB,CAAlB,CAAd,CASA,cAAehB,CAAAA,cAAf","sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport {Animated, Easing, StyleSheet} from 'react-native';\nimport {blue200} from 'Helpers/palette';\n\nconst PaginationItem = ({active}: {active?: boolean; color?: string}) => {\n  const animate = useRef(new Animated.Value(active ? 6 : 0)).current;\n  useEffect(() => {\n    setWidth(active ? 6 : 0);\n  }, [active]);\n  const setWidth = (val: number) => {\n    Animated.timing(animate, {\n      toValue: val,\n      duration: 150,\n      easing: Easing.linear,\n      //    useNativeDriver: true\n    }).start();\n  };\n  const animateStyle = StyleSheet.flatten({\n    animate: {\n      paddingHorizontal: animate,\n      backgroundColor: animate.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['#ffffff', blue200],\n      }),\n    },\n  });\n  return <Animated.View style={[style.pagination, animateStyle.animate]} />;\n};\nconst style = StyleSheet.create({\n  pagination: {\n    height: 8,\n    width: 8,\n    marginHorizontal: 5,\n    borderRadius: 15,\n    backgroundColor: '#f7f7f7',\n  },\n});\nexport default PaginationItem;\n"]}
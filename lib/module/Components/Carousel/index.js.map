{"version":3,"sources":["index.tsx"],"names":["React","useState","useRef","Animated","Dimensions","StyleSheet","View","ScaledImage","PaginationItem","blue500","Ripple","useDimensions","Carousel","imgData","width","window","active","setState","_scroller","to","console","log","current","_component","scrollResponderScrollTo","x","get","y","duration","animated","height","flex","nativeEvent","index","Number","contentOffset","toFixed","length","flexDirection","padding","map","i","k","style","paginationWrapper","Array","fill","create","justifyContent","marginTop"],"mappings":"8NAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,MAAzB,KAA2C,OAA3C,CACA,OAAQC,QAAR,CAAkBC,UAAlB,CAA8BC,UAA9B,CAA0CC,IAA1C,KAAqD,cAArD,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAAQC,OAAR,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,OAAQC,aAAR,KAA4B,qBAA5B,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAgC,IAA9BC,CAAAA,OAA8B,MAA9BA,OAA8B,IACxCC,CAAAA,KADwC,CAC/BH,aAAa,GAAGI,MADe,CACxCD,KADwC,eAEpBb,QAAQ,CAAC,CAAD,CAFY,wCAExCe,MAFwC,eAEhCC,QAFgC,eAG/C,GAAMC,CAAAA,SAAkC,CAAGhB,MAAM,CAAC,IAAD,CAAjD,CACA,GAAMiB,CAAAA,EAAE,CAAG,QAALA,CAAAA,EAAK,CAACH,MAAD,CAAoB,uBAC7BC,QAAQ,CAACD,MAAD,CAAR,CACAI,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCH,SAAS,CAACI,OAA7C,EAEA,mBAAAJ,SAAS,CAACI,OAAV,iCAAmBC,UAAnB,CAA8BC,uBAA9B,CAAsD,CACpDC,CAAC,CAAErB,UAAU,CAACsB,GAAX,CAAe,QAAf,EAAyBZ,KAAzB,CAAiCE,MADgB,CAEpDW,CAAC,CAAE,CAFiD,CAGpDC,QAAQ,CAAE,GAH0C,CAIpDC,QAAQ,CAAE,IAJ0C,CAAtD,EAMD,CAVD,CAWA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBhB,KAAK,CAAE,MAAxB,CAAgCiB,IAAI,CAAE,CAAtC,CAAb,iDACE,oBAAC,QAAD,CAAU,UAAV,EACE,GAAG,CAAEb,SADP,CAEE,UAAU,CAAE,IAFd,CAGE,oBAAoB,CAAE,KAHxB,CAIE,OAAO,CAAE,KAJX,CAKE,8BAA8B,CAAE,KALlC,CAME,6BAA6B,CAAE,IANjC,CAOE,aAAa,CAAE,IAPjB,CAQE,aAAa,CAAE,IARjB,CASE,mBAAmB,CAAE,mCAAuC,IAArCc,CAAAA,WAAqC,OAArCA,WAAqC,CAC1D,GAAIC,CAAAA,KAAa,CAAGC,MAAM,CACxBA,MAAM,CAACF,WAAW,CAACG,aAAZ,CAA0BV,CAA1B,CAA8BX,KAA/B,CAAN,CAA4CsB,OAA5C,CAAoD,CAApD,CADwB,CAA1B,CAGAnB,QAAQ,CAACgB,KAAD,CAAR,CACD,CAdH,CAeE,KAAK,CAAE,CAACH,MAAM,CAAE,MAAT,CAfT,CAgBE,qBAAqB,CAAE,CACrBhB,KAAK,CAAEA,KAAK,CAAGD,OAAO,CAACwB,MADF,CAErBC,aAAa,CAAE,KAFM,CAGrBR,MAAM,CAAE,MAHa,CAKrBS,OAAO,CAAE,CALY,CAhBzB,iDAuBG1B,OAAO,CAAC2B,GAAR,CAAY,SAACC,CAAD,CAASC,CAAT,QACX,qBAAC,WAAD,aAAiBD,CAAjB,EAAoB,GAAG,CAAEC,CAAzB,kDADW,EAAZ,CAvBH,CADF,CA4BE,oBAAC,IAAD,EAAM,KAAK,CAAEC,KAAK,CAACC,iBAAnB,iDACG,GAAIC,CAAAA,KAAJ,CAAUhC,OAAO,CAACwB,MAAlB,EAA0BS,IAA1B,CAA+B,EAA/B,EAAmCN,GAAnC,CAAuC,SAACC,CAAD,CAAIC,CAAJ,QACtC,qBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMvB,CAAAA,EAAE,CAACuB,CAAD,CAAR,EAAjB,CAA8B,GAAG,CAAED,CAAC,EAAIC,CAAxC,iDACE,oBAAC,cAAD,EAAgB,KAAK,CAAEjC,OAAvB,CAAgC,MAAM,CAAEO,MAAM,EAAI0B,CAAlD,iDADF,CADsC,EAAvC,CADH,CA5BF,CADF,CAsCD,CArDD,CAuDA,MAAO,IAAMC,CAAAA,KAAK,CAAGtC,UAAU,CAAC0C,MAAX,CAAkB,CACrCH,iBAAiB,CAAE,CACjBb,IAAI,CAAE,CADW,CAEjBjB,KAAK,CAAE,MAFU,CAGjBwB,aAAa,CAAE,KAHE,CAIjBU,cAAc,CAAE,QAJC,CAKjBC,SAAS,CAAE,CAAC,EALK,CADkB,CAAlB,CAAd,CAUP,cAAerC,CAAAA,QAAf","sourcesContent":["import React, {useState, useRef, Ref} from 'react';\nimport {Animated, Dimensions, StyleSheet, View} from 'react-native';\nimport ScaledImage from './ScaledImage';\nimport PaginationItem from './PaginationItem';\nimport {blue500} from '../../Helpers/palette';\nimport Ripple from '../Core/Ripple';\nimport {useDimensions} from '../../Helpers/Hooks';\nconst Carousel = ({imgData}: {imgData?: any}) => {\n  const {width} = useDimensions().window;\n  const [active, setState] = useState(0);\n  const _scroller: Ref<{_component?: any}> = useRef(null);\n  const to = (active: number) => {\n    setState(active);\n    console.log(' _scroller.current ', _scroller.current);\n    // _scroller.current &&\n    _scroller.current?._component.scrollResponderScrollTo({\n      x: Dimensions.get('window').width * active,\n      y: 0,\n      duration: 400,\n      animated: true,\n    });\n  };\n  return (\n    <View style={{height: '100%', width: '100%', flex: 1}}>\n      <Animated.ScrollView\n        ref={_scroller}\n        horizontal={true}\n        alwaysBounceVertical={false}\n        bounces={false}\n        showsHorizontalScrollIndicator={false}\n        disableScrollViewPanResponder={true}\n        pagingEnabled={true}\n        scrollEnabled={true}\n        onMomentumScrollEnd={({nativeEvent}: {nativeEvent: any}) => {\n          let index: number = Number(\n            Number(nativeEvent.contentOffset.x / width).toFixed(0),\n          );\n          setState(index);\n        }}\n        style={{height: '100%'}}\n        contentContainerStyle={{\n          width: width * imgData.length,\n          flexDirection: 'row',\n          height: '100%',\n          // flex: 1,\n          padding: 0,\n        }}>\n        {imgData.map((i: any, k: number) => (\n          <ScaledImage {...i} key={k} />\n        ))}\n      </Animated.ScrollView>\n      <View style={style.paginationWrapper}>\n        {new Array(imgData.length).fill('').map((i, k) => (\n          <Ripple onPress={() => to(k)} key={i || k}>\n            <PaginationItem color={blue500} active={active == k} />\n          </Ripple>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport const style = StyleSheet.create({\n  paginationWrapper: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: -20,\n  },\n});\n\nexport default Carousel;\n"]}
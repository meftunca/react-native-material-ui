{"version":3,"sources":["index.tsx"],"names":["React","useState","useRef","Animated","Dimensions","StyleSheet","View","ScaledImage","PaginationItem","blue500","Ripple","useDimensions","Carousel","imgData","window","width","height","active","setState","_scroller","to","console","log","current","_component","scrollResponderScrollTo","x","get","y","duration","animated","nativeEvent","index","Number","contentOffset","toFixed","length","flexDirection","padding","map","i","k","style","paginationWrapper","Array","fill","create","flex","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, {Component, useState, useRef, Ref} from 'react';\nimport {Animated, Dimensions, StyleSheet, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport ScaledImage from './ScaledImage';\nimport PaginationItem from './PaginationItem';\nimport {blue500} from 'Helpers/palette';\nimport Ripple from 'Components/Core/Ripple';\nimport {useDimensions} from 'Helpers/Hooks';\nconst Carousel = ({imgData}: {imgData?: any}) => {\n  const {width, height} = useDimensions().window;\n  const [active, setState] = useState(0);\n  const _scroller: Ref<{_component?: any}> = useRef(null);\n  const to = (active: number) => {\n    setState(active);\n    console.log(' _scroller.current ', _scroller.current);\n    _scroller.current &&\n      _scroller.current?._component.scrollResponderScrollTo({\n        x: Dimensions.get('window').width * active,\n        y: 0,\n        duration: 400,\n        animated: true,\n      });\n  };\n  return (\n    <View>\n      <Animated.ScrollView\n        ref={_scroller}\n        horizontal={true}\n        alwaysBounceVertical={false}\n        bounces={false}\n        showsHorizontalScrollIndicator={false}\n        disableScrollViewPanResponder={true}\n        pagingEnabled={true}\n        scrollEnabled={true}\n        onMomentumScrollEnd={({nativeEvent}: {nativeEvent: any}) => {\n          let index: number = Number(\n            Number(nativeEvent.contentOffset.x / width).toFixed(0),\n          );\n          setState(index);\n        }}\n        contentContainerStyle={{\n          width: width * imgData.length,\n          flexDirection: 'row',\n          padding: 0,\n        }}>\n        {imgData.map((i: any, k: number) => (\n          <ScaledImage {...i} key={k} />\n        ))}\n      </Animated.ScrollView>\n      <View style={style.paginationWrapper}>\n        {new Array(imgData.length).fill('').map((i, k) => (\n          <Ripple onPress={() => to(k)} key={i || k}>\n            <PaginationItem color={blue500} active={active == k} />\n          </Ripple>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport const style = StyleSheet.create({\n  paginationWrapper: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: -20,\n  },\n});\n\nexport default Carousel;\n"]}
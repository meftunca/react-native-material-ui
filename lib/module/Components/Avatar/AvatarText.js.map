{"version":3,"sources":["AvatarText.tsx"],"names":["React","Animated","elevationShadowStyle","Text","Color","useTheme","AvatarText","size","padding","color","backgroundColor","style","containerStyle","elevation","label","theme","textProps","props","primary","width","height","borderRadius","alignItems","justifyContent","isDark","displayName"],"mappings":"qPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAA0D,cAA1D,CACA,OAAQC,oBAAR,KAAmC,8BAAnC,CACA,MAAOC,CAAAA,IAAP,KAA8B,oBAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAoBC,QAApB,KAAmC,eAAnC,CAeA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAYxC,oBAXJC,IAWI,CAXJA,IAWI,oBAXG,EAWH,WAVJC,OAUI,MAVJA,OAUI,CATJC,KASI,MATJA,KASI,CARJC,eAQI,MARJA,eAQI,CAPJC,KAOI,MAPJA,KAOI,CANJC,cAMI,MANJA,cAMI,CALJC,SAKI,MALJA,SAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,SAEI,MAFJA,SAEI,CADDC,KACC,8IACJF,KAAK,CAAGV,QAAQ,CAACU,KAAD,CAAhB,CACAL,eAAe,CAAGA,eAAe,EAAIK,KAAK,CAACN,KAAN,CAAYS,OAAjD,CACA,MACE,qBAAC,QAAD,CAAU,IAAV,WACE,KAAK,CAAE,CACL,CACEC,KAAK,CAAEZ,IAAI,CAAG,CADhB,CAEEa,MAAM,CAAEb,IAAI,CAAG,CAFjB,CAGEc,YAAY,CAAEd,IAHhB,CAIEG,eAAe,CAAfA,eAJF,CAKEF,OAAO,CAAPA,OALF,CAMEc,UAAU,CAAE,QANd,CAOEC,cAAc,CAAE,QAPlB,CADK,CAULrB,oBAAoB,CAACW,SAAS,EAAI,CAAd,CAVf,CAWLD,cAXK,CADT,EAcMK,KAdN,mDAeE,oBAAC,IAAD,WACE,KAAK,CAAEb,KAAK,CAACM,eAAD,CAAL,CAAuBc,MAAvB,GAAkC,OAAlC,CAA4C,OADrD,CAEE,IAAI,CAAEjB,IAAI,CAAG,CAFf,CAGE,MAAM,CAAC,KAHT,CAIE,KAAK,CAAC,QAJR,EAKMS,SALN,mDAMGF,KANH,CAfF,CADF,CA0BD,CAzCD,CA0CAR,UAAU,CAACmB,WAAX,CAAyB,aAAzB,CACA,cAAenB,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { Animated, StyleProp, ViewStyle, ImageStyle} from 'react-native';\nimport {elevationShadowStyle} from '../../Helpers/styleGenerator';\nimport Text, {TextProps} from '../Core/Typography';\nimport Color from 'color';\nimport {ThemeTypes, useTheme} from '../../Theming';\n\nexport interface AvatarTextProps {\n  elevation?: number;\n  size?: number;\n  style?: StyleProp<ImageStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  padding?: number;\n  color?: string;\n  backgroundColor?: string;\n  label?: string;\n  theme?: ThemeTypes;\n\n  textProps?: TextProps;\n}\nconst AvatarText: React.FC<AvatarTextProps> = ({\n  size = 32,\n  padding,\n  color,\n  backgroundColor,\n  style,\n  containerStyle,\n  elevation,\n  label,\n  theme,\n  textProps,\n  ...props\n}) => {\n  theme = useTheme(theme);\n  backgroundColor = backgroundColor || theme.color.primary;\n  return (\n    <Animated.View\n      style={[\n        {\n          width: size + 8,\n          height: size + 8,\n          borderRadius: size,\n          backgroundColor,\n          padding,\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        elevationShadowStyle(elevation || 1),\n        containerStyle,\n      ]}\n      {...props}>\n      <Text\n        color={Color(backgroundColor).isDark() ? 'white' : 'black'}\n        size={size / 2}\n        weight=\"500\"\n        align=\"center\"\n        {...textProps}>\n        {label}\n      </Text>\n    </Animated.View>\n  );\n};\nAvatarText.displayName = 'Avatar.Text';\nexport default AvatarText;\n"]}
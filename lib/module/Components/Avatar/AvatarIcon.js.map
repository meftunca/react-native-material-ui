{"version":3,"sources":["AvatarIcon.tsx"],"names":["React","Animated","Icon","elevationShadowStyle","Color","useTheme","AvatarIcon","icon","size","padding","color","iconFontFamily","backgroundColor","style","containerStyle","elevation","theme","props","primary","width","height","borderRadius","alignItems","justifyContent","alignContent","isDark","displayName"],"mappings":"qPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAcC,QAAd,KAA+D,cAA/D,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,OAAQC,oBAAR,KAAmC,wBAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAoBC,QAApB,KAAmC,SAAnC,CA0BA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAYxC,IAXJC,CAAAA,IAWI,MAXJA,IAWI,gBAVJC,IAUI,CAVJA,IAUI,oBAVG,EAUH,WATJC,OASI,MATJA,OASI,CARJC,KAQI,MARJA,KAQI,0BAPJC,cAOI,CAPJA,cAOI,8BAPa,mBAOb,qBANJC,eAMI,MANJA,eAMI,CALJC,KAKI,MALJA,KAKI,CAJJC,cAII,MAJJA,cAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,KAEI,MAFJA,KAEI,CADDC,KACC,kJACJD,KAAK,CAAGX,QAAQ,CAACW,KAAD,CAAhB,CACAJ,eAAe,CAAGA,eAAe,EAAII,KAAK,CAACN,KAAN,CAAYQ,OAAjD,CACA,MACE,qBAAC,QAAD,CAAU,IAAV,aACMD,KADN,EAEE,KAAK,CAAE,CACL,CACEE,KAAK,CAAEX,IADT,CAEEY,MAAM,CAAEZ,IAFV,CAGEa,YAAY,CAAEb,IAAI,CAAG,CAHvB,CAIEI,eAAe,CAAfA,eAJF,CAKEH,OAAO,CAAPA,OALF,CAMEa,UAAU,CAAE,QANd,CAOEC,cAAc,CAAE,QAPlB,CAQEC,YAAY,CAAE,QARhB,CADK,CAWLrB,oBAAoB,CAACY,SAAS,EAAI,CAAd,CAXf,CAYLD,cAZK,CAFT,kDAgBE,oBAAC,IAAD,EACE,IAAI,CAAEP,IADR,CAEE,IAAI,CAAGC,IAAI,CAAG,CAAR,CAAa,CAFrB,CAGE,KAAK,CACHJ,KAAK,CAACQ,eAAD,CAAL,CAAuBa,MAAvB,IAAmC,MAAOf,CAAAA,KAAP,GAAiB,QAApD,CACI,OADJ,CAEIA,KAAK,GAAK,QAAV,CACA,OADA,CAEAA,KARR,CAUE,MAAM,CAAEC,cAVV,iDAhBF,CADF,CA+BD,CA9CD,CA+CAL,UAAU,CAACoB,WAAX,CAAyB,aAAzB,CACA,cAAepB,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport {View, Animated, StyleProp, ViewStyle, ImageStyle} from 'react-native';\nimport Icon from 'Components/Core/Icon';\nimport {elevationShadowStyle} from 'Helpers/styleGenerator';\nimport Color from 'color';\nimport {ThemeTypes, useTheme} from 'Theming';\nexport interface AvatarIconProps {\n  elevation?: number;\n  size?: number;\n  style?: StyleProp<ImageStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  padding?: number;\n  color?: string;\n  icon?: string;\n  backgroundColor?: string;\n  theme?: ThemeTypes;\n  iconFontFamily?:\n    | 'materialCommunity'\n    | 'material'\n    | 'simpleLine'\n    | 'fa'\n    | 'fa5'\n    | 'fa5pro'\n    | 'foundation'\n    | 'evil'\n    | 'octicons'\n    | 'ionic'\n    | 'feather'\n    | 'entypo'\n    | 'zocial';\n}\nconst AvatarIcon: React.FC<AvatarIconProps> = ({\n  icon,\n  size = 32,\n  padding,\n  color,\n  iconFontFamily = 'materialCommunity',\n  backgroundColor,\n  style,\n  containerStyle,\n  elevation,\n  theme,\n  ...props\n}) => {\n  theme = useTheme(theme);\n  backgroundColor = backgroundColor || theme.color.primary;\n  return (\n    <Animated.View\n      {...props}\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n          padding,\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n        },\n        elevationShadowStyle(elevation || 1),\n        containerStyle,\n      ]}>\n      <Icon\n        name={icon}\n        size={(size * 2) / 3}\n        color={\n          Color(backgroundColor).isDark() && typeof color !== 'string'\n            ? 'white'\n            : color !== 'string'\n            ? 'black'\n            : color\n        }\n        family={iconFontFamily}\n      />\n    </Animated.View>\n  );\n};\nAvatarIcon.displayName = 'Avatar.Icon';\nexport default AvatarIcon;\n"]}
{"version":3,"sources":["Collapse.tsx"],"names":["React","useRef","useEffect","useState","Animated","Easing","View","useLayout","Collapse","expanded","delay","duration","children","easyFunc","type","rest","collapse","Value","current","mount","setMount","contentLayout","setTimeout","timing","toValue","easing","inOut","cubic","start","interpolateHeight","interpolate","inputRange","outputRange","height","interpolatePosition","width","overflow","flexDirection","alignSelf","marginTop","onLayout"],"mappings":"kTAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,SAAvB,CAAkCC,QAAlC,KAAiD,OAAjD,CACA,OAAQC,QAAR,CAAkBC,MAAlB,CAA0BC,IAA1B,KAAqC,cAArC,CACA,OAAQC,SAAR,KAAwB,qBAAxB,CAUA,GAAMC,CAAAA,QAAiC,CAAG,QAApCA,CAAAA,QAAoC,MAQpC,wBAPJC,QAOI,CAPJA,QAOI,wBAPO,KAOP,+BANJC,KAMI,CANJA,KAMI,qBANI,CAMJ,+BALJC,QAKI,CALJA,QAKI,wBALO,EAKP,eAJJC,QAII,MAJJA,QAII,CAHJC,QAGI,MAHJA,QAGI,gBAFJC,IAEI,CAFJA,IAEI,oBAFG,UAEH,WADDC,IACC,6FACJ,GAAMC,CAAAA,QAAQ,CAAGf,MAAM,CAAC,GAAIG,CAAAA,QAAQ,CAACa,KAAb,CAAmBR,QAAQ,CAAG,CAAH,CAAO,CAAlC,CAAD,CAAN,CAA6CS,OAA9D,CADI,cAEsBf,QAAQ,CAAC,KAAD,CAF9B,wCAEGgB,KAFH,eAEUC,QAFV,eAGJ,GAAMC,CAAAA,aAAa,CAAGd,SAAS,EAA/B,CACAL,SAAS,CAAC,UAAM,CACdoB,UAAU,CAAC,UAAM,CACfF,QAAQ,CAAC,IAAD,CAAR,CACD,CAFS,CAEPT,QAFO,CAAV,CAGD,CAJQ,CAIN,EAJM,CAAT,CAKAT,SAAS,CAAC,UAAM,CACd,GAAIiB,KAAJ,CACEf,QAAQ,CAACmB,MAAT,CAAgBP,QAAhB,CAA0B,CACxBQ,OAAO,CAAEf,QAAQ,GAAK,IAAb,CAAoB,CAApB,CAAwB,CADT,CAExBgB,MAAM,CAAEZ,QAAQ,EAAIR,MAAM,CAACqB,KAAP,CAAarB,MAAM,CAACsB,KAApB,CAFI,CAGxBhB,QAAQ,CAARA,QAHwB,CAIxBD,KAAK,CAALA,KAJwB,CAA1B,EAKGkB,KALH,GAMH,CARQ,CAQN,CAACnB,QAAD,CARM,CAAT,CASA,GAAMoB,CAAAA,iBAAiB,CAAGb,QAAQ,CAACc,WAAT,CAAqB,CAC3CC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CAD+B,CAE3CC,WAAW,CAAE,CAAC,CAAD,CAAIX,aAAa,CAACY,MAAlB,CAF8B,CAArB,CAA1B,CAIEC,mBAAmB,CAAGlB,QAAQ,CAACc,WAAT,CAAqB,CACzCC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CAD6B,CAEzCC,WAAW,CAAE,CAAC,CAACX,aAAa,CAACY,MAAhB,CAAwB,CAAxB,CAF4B,CAArB,CAJxB,CAQA,MACE,qBAAC,IAAD,EACE,WAAW,KADb,CAEE,iBAAiB,CAAC,YAFpB,CAGE,uBAAuB,CAAC,QAH1B,CAIE,kBAAkB,CAAC,iBAJrB,CAKE,mBAAmB,CAAC,iBALtB,CAME,UAAU,KANZ,CAOE,aAAa,CAAE,CAACxB,QAAD,CAAY,MAAZ,CAAqB,MAPtC,CAQE,KAAK,CAAE,CACL0B,KAAK,CAAE,MADF,CAELC,QAAQ,CAAE,QAFL,CAGLC,aAAa,CAAE,QAHV,CAILC,SAAS,CAAE,YAJN,CART,iDAcE,oBAAC,QAAD,CAAU,IAAV,aACMvB,IADN,EAEE,KAAK,CAAE,CACLD,IAAI,GAAK,UAAT,CACI,CACEyB,SAAS,CAAEL,mBADb,CADJ,CAII,CACED,MAAM,CAAEJ,iBADV,CALC,CAFT,kDAWE,oBAAC,IAAD,EAAM,QAAQ,CAAER,aAAa,CAACmB,QAA9B,iDAAyC5B,QAAzC,CAXF,CAdF,CADF,CA8BD,CAhED,CAkEA,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\nimport {Animated, Easing, View} from 'react-native';\nimport {useLayout} from '../../Helpers/Hooks';\n\ninterface CollapseProps {\n  expanded?: boolean;\n  delay?: number;\n  duration?: number;\n  children?: React.ReactNode;\n  type?: 'position' | 'height';\n  easyFunc?: (value: number) => number;\n}\nconst Collapse: React.FC<CollapseProps> = ({\n  expanded = false,\n  delay = 0,\n  duration = 50,\n  children,\n  easyFunc,\n  type = 'position',\n  ...rest\n}) => {\n  const collapse = useRef(new Animated.Value(expanded ? 1 : 0)).current;\n  const [mount, setMount] = useState(false);\n  const contentLayout = useLayout();\n  useEffect(() => {\n    setTimeout(() => {\n      setMount(true);\n    }, duration);\n  }, []);\n  useEffect(() => {\n    if (mount)\n      Animated.timing(collapse, {\n        toValue: expanded === true ? 1 : 0,\n        easing: easyFunc || Easing.inOut(Easing.cubic),\n        duration,\n        delay,\n      }).start();\n  }, [expanded]);\n  const interpolateHeight = collapse.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, contentLayout.height],\n    }),\n    interpolatePosition = collapse.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-contentLayout.height, 0],\n    });\n  return (\n    <View\n      collapsable\n      accessibilityRole=\"adjustable\"\n      accessibilityLiveRegion=\"polite\"\n      accessibilityLabel=\"collapasbleView\"\n      accessibilityTraits=\"frequentUpdates\"\n      accessible\n      pointerEvents={!expanded ? 'none' : 'auto'}\n      style={{\n        width: '100%',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        alignSelf: 'flex-start',\n      }}>\n      <Animated.View\n        {...rest}\n        style={[\n          type === 'position'\n            ? {\n                marginTop: interpolatePosition,\n              }\n            : {\n                height: interpolateHeight,\n              },\n        ]}>\n        <View onLayout={contentLayout.onLayout}>{children}</View>\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default Collapse;\n"]}
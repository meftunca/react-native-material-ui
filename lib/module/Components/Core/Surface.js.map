{"version":3,"sources":["Surface.tsx"],"names":["React","View","directionRepeat","elevationShadowStyle","defaultThemeProps","paper","backgroundColor","color","Surface","padding","margin","elevation","style","direction","justify","cornerRaidus","alignContent","alignItems","overflow","children","theme","otherProps","styleObject","borderRadius","flexDirection","justifyContent","Children","count","paddingControl","marginControl","displayName"],"mappings":"+kCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,KAA8B,cAA9B,CACA,OACEC,eADF,CAEEC,oBAFF,KAGO,gCAHP,CA0CA,GAAMC,CAAAA,iBAAoC,CAAG,CAC3CC,KAAK,CAAE,CAACC,eAAe,CAAE,OAAlB,CADoC,CAE3CC,KAAK,CAAE,OAFoC,CAA7C,CAIA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAclC,uBAbJC,OAaI,CAbJA,OAaI,uBAbM,CAAC,EAAD,CAAK,EAAL,CAaN,+BAZJC,MAYI,CAZJA,MAYI,sBAZK,CAYL,iCAXJC,SAWI,CAXJA,SAWI,yBAXQ,CAWR,gBAVJC,KAUI,MAVJA,KAUI,qBATJC,SASI,CATJA,SASI,yBATQ,KASR,gBARJC,OAQI,MARJA,OAQI,wBAPJC,YAOI,CAPJA,YAOI,4BAPW,CAOX,0CANJC,YAMI,CANJA,YAMI,4BANW,QAMX,mBALJC,UAKI,MALJA,UAKI,oBAJJC,QAII,CAJJA,QAII,wBAJO,QAIP,eAHJC,QAGI,MAHJA,QAGI,iBAFJC,KAEI,CAFJA,KAEI,qBAFIhB,iBAEJ,YADDiB,UACC,wKACJ,GAAIC,CAAAA,WAAgB,gBAClBJ,QAAQ,CAARA,QADkB,CAElBK,YAAY,CAAER,YAFI,EAGfK,KAAK,CAACf,KAHS,EAIlBmB,aAAa,CAAEX,SAJG,CAKlBY,cAAc,CAAEX,OAAO,CACnBA,OADmB,CAEnBd,KAAK,CAAC0B,QAAN,CAAeC,KAAf,CAAqBR,QAArB,EAAiC,CAAjC,CACA,eADA,CAEA,QATc,CAUlBH,YAAY,CAAZA,YAVkB,CAWlBC,UAAU,CAAVA,UAXkB,EAApB,CAaA,GAAIW,CAAAA,cAAc,CAChB,MAAOnB,CAAAA,OAAP,GAAmB,QAAnB,EAA+B,MAAOA,CAAAA,OAAP,GAAmB,QAAlD,CACI,CAACA,OAAO,CAAPA,OAAD,CADJ,CAEIP,eAAe,CAAC,SAAD,CAAYO,OAAZ,CAHrB,CAIA,GAAIoB,CAAAA,aAAa,CACf,MAAOnB,CAAAA,MAAP,GAAkB,QAAlB,EAA8B,MAAOA,CAAAA,MAAP,GAAkB,QAAhD,CACI,CAACA,MAAM,CAANA,MAAD,CADJ,CAEIR,eAAe,CAAC,QAAD,CAAWQ,MAAX,CAHrB,CAKA,MACE,qBAAC,IAAD,aACMW,UADN,EAEE,KAAK,CAAE,CACLC,WADK,CAELM,cAFK,CAGLC,aAHK,CAILjB,KAJK,CAKLT,oBAAoB,CAACQ,SAAD,CALf,CAFT,kDASGQ,QATH,CADF,CAaD,CAlDD,CAmDAX,OAAO,CAACsB,WAAR,CAAsB,SAAtB,CACA,cAAetB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport {View, ViewProps} from 'react-native';\nimport {\n  directionRepeat,\n  elevationShadowStyle,\n} from './../../Helpers/styleGenerator';\n\ntype paperType = {\n  backgroundColor?: string;\n};\nexport interface SurfaceThemeProps {\n  paper?: paperType;\n  color?: string;\n}\ntype ReactNode =\n  | React.ReactChild\n  | React.ReactFragment\n  | React.ReactPortal\n  | boolean\n  | null\n  | undefined;\n\ntype flexType =\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n  | 'flex-end'\n  | 'flex-start'\n  | 'stretch'\n  | undefined;\nexport interface SurfaceProps extends ViewProps {\n  padding?: number[] | string[] | number | string;\n  margin?: number[] | string[] | number | string;\n  justify?: flexType;\n  alignItems?: flexType;\n  alignContent?: flexType;\n  cornerRaidus?: number;\n  elevation?: number;\n  overflow?: 'visible' | 'hidden' | 'scroll';\n  direction?: 'row' | 'row-reverse' | 'column' | 'column-reverse';\n  children?: ReactNode | ReactNode[];\n  theme?: SurfaceThemeProps;\n}\nconst defaultThemeProps: SurfaceThemeProps = {\n  paper: {backgroundColor: 'white'},\n  color: 'black',\n};\nconst Surface: React.FC<SurfaceProps> = ({\n  padding = [16, 16],\n  margin = 0,\n  elevation = 0,\n  style,\n  direction = 'row',\n  justify,\n  cornerRaidus = 2,\n  alignContent = 'center',\n  alignItems,\n  overflow = 'hidden',\n  children,\n  theme = defaultThemeProps,\n  ...otherProps\n}) => {\n  let styleObject: any = {\n    overflow,\n    borderRadius: cornerRaidus,\n    ...theme.paper,\n    flexDirection: direction,\n    justifyContent: justify\n      ? justify\n      : React.Children.count(children) > 1\n      ? 'space-between'\n      : 'center',\n    alignContent,\n    alignItems,\n  };\n  let paddingControl =\n    typeof padding === 'number' || typeof padding === 'string'\n      ? {padding}\n      : directionRepeat('padding', padding);\n  let marginControl =\n    typeof margin === 'number' || typeof margin === 'string'\n      ? {margin}\n      : directionRepeat('margin', margin);\n\n  return (\n    <View\n      {...otherProps}\n      style={[\n        styleObject,\n        paddingControl,\n        marginControl,\n        style,\n        elevationShadowStyle(elevation),\n      ]}>\n      {children}\n    </View>\n  );\n};\nSurface.displayName = 'Surface';\nexport default Surface;\n"]}
{"version":3,"sources":["BackDropModal.web.tsx"],"names":["React","useEffect","StyleSheet","TouchableWithoutFeedback","KeyboardAvoidingView","Animated","Easing","useAnimation","useDimensions","usePortal","BackDropModal","onClose","children","animationType","duration","delay","visible","fullScreen","backdropColor","windowHeight","window","height","animation","type","toValue","initialValue","easing","ease","openPortal","closePortal","isOpen","Portal","console","log","setTimeout","absoluteFill","position","display","zIndex","flex","backgroundColor","opacity","flatten","absoluteFillObject","justifyContent","alignContent","alignItems","alignSelf","flexGrow","flexShrink","top","interpolate","inputRange","outputRange","width"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {\n  StyleSheet,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  Animated,\n  Easing,\n} from 'react-native';\nimport {useAnimation, useDimensions} from '../../Helpers/Hooks';\nimport usePortal from '../../Helpers/Hooks/usePortal.web';\ninterface BackDropModalProps {\n  visible?: boolean;\n  fullScreen?: boolean;\n  backdropColor?: string;\n  duration?: number;\n  delay?: number;\n  animationType?: 'fade' | 'slide' | 'none';\n  onClose?: () => void | undefined;\n  children?: React.ReactNode;\n}\n\nconst BackDropModal: React.FC<BackDropModalProps> = ({\n  onClose,\n  children,\n  animationType,\n  duration = 400,\n  delay,\n  visible = false,\n  fullScreen = false,\n  backdropColor = 'transparent',\n}) => {\n  const windowHeight = useDimensions().window.height;\n  const animation = useAnimation({\n    type: 'timing',\n    toValue: visible ? 1 : 0,\n    initialValue: visible ? 1 : 0,\n    easing: Easing.ease,\n    duration,\n    delay,\n  });\n  const {openPortal, closePortal, isOpen, Portal} = usePortal({});\n  useEffect(() => {\n    return () => onClose && onClose();\n  }, []);\n\n  useEffect(() => {\n    console.log('visible', visible);\n    if (visible === true) openPortal(true);\n    else if (backdropColor === 'transparent') closePortal();\n    else\n      setTimeout(() => {\n        closePortal();\n      }, 1200);\n  }, [visible]);\n  return (\n    <Portal>\n      <Animated.View\n        pointerEvents={visible ? 'auto' : 'none'}\n        accessibilityViewIsModal\n        accessibilityLiveRegion=\"polite\"\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            position: 'fixed',\n            display: isOpen ? 'flex' : 'none',\n            height: '100%',\n          },\n        ]}>\n        <TouchableWithoutFeedback style={{zIndex: 0}} onPress={onClose}>\n          <Animated.View\n            style={{\n              flex: 1,\n              backgroundColor:\n                animationType === 'slide' ? 'transparent' : backdropColor,\n              opacity: animation,\n            }}\n          />\n        </TouchableWithoutFeedback>\n        <Animated.View\n          id=\"Dialog\"\n          style={StyleSheet.flatten([\n            fullScreen === true && {\n              backgroundColor: 'white',\n              height: '100%',\n              flex: 1,\n            },\n            {\n              ...StyleSheet.absoluteFillObject,\n              justifyContent: 'center',\n              alignContent: 'center',\n              alignItems: 'center',\n              alignSelf: 'center',\n              flexGrow: 1,\n              flexShrink: 1,\n              // backgroundColor: 'red',\n              zIndex: 999,\n            },\n            animationType === 'slide'\n              ? {\n                  top: animation.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [windowHeight, 0],\n                  }),\n                }\n              : animationType === 'fade'\n              ? {\n                  opacity: animation,\n                }\n              : {},\n          ])}\n          pointerEvents=\"box-none\">\n          <KeyboardAvoidingView\n            behavior=\"height\"\n            style={StyleSheet.flatten([\n              fullScreen && {\n                height: '100%',\n              },\n              {\n                width: fullScreen ? '100%' : '80%',\n                backgroundColor: 'transparent',\n                justifyContent: 'center',\n                alignSelf: 'center',\n              },\n            ])}>\n            {children}\n          </KeyboardAvoidingView>\n        </Animated.View>\n      </Animated.View>\n    </Portal>\n  );\n};\n\nexport default BackDropModal;\n"]}
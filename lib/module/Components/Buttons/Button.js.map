{"version":3,"sources":["Button.tsx"],"names":["React","Animated","StyleSheet","Ripple","Text","Surface","Icon","Color","useTheme","elevationShadowStyle","propTypes","Button","variant","children","cornerRadius","elevation","paperProps","padding","margin","color","role","style","size","type","dense","fullWidth","iconFontFamily","rippleStyle","onLayout","buttonRef","theme","containerStyle","icon","textProps","transform","props","themeControl","isDefaultButton","primary","textColor","isDark","undefined","borderRadius","overflow","buttonStyleGenerator","lighten","rgb","toString","darken","alignSelf","flatten","backgroundColor","minHeight","marginLeft","textTransform","textAlign","marginHorizontal","alpha","defaultProps","oneOf","object","oneOfType","string","number","bool","any"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Animated, StyleSheet, Platform} from 'react-native';\nimport Ripple, {RippleProps} from '../Core/Ripple';\nimport Text, {TextProps} from '../Core/Typography';\nimport Surface, {SurfaceProps} from '../Core/Surface';\nimport {ViewStyle, StyleProp} from 'react-native';\nimport Icon, {IconFontFamily} from '../Core/Icon';\nimport Color from 'color';\nimport {useTheme} from '../../Theming';\nimport {elevationShadowStyle} from '../../Helpers/styleGenerator';\nimport propTypes from 'prop-types';\nexport type ButtonProps = RippleProps & {\n  iconFontFamily?: IconFontFamily;\n  variant?: 'text' | 'outlined' | 'contained';\n  type?: 'button' | 'drawer' | 'dialog';\n  role?: 'fab' | 'icon' | 'button';\n  paperProps?: SurfaceProps;\n  color?: string | 'primary' | 'secondary';\n  cornerRadius?: number;\n  elevation?: number;\n  size?: number;\n  dense?: boolean;\n  fullWidth?: boolean;\n  onLayout?: any; // bu kısımı sonrada düzenle\n  textProps?: TextProps;\n  transform?: 'none' | 'capitalize' | 'uppercase' | 'lowercase';\n  icon?: string;\n  theme?: object;\n  containerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  rippleStyle?: StyleProp<ViewStyle>;\n  buttonRef?: any;\n  children?: string | React.ReactNode;\n};\n\n/**\n * General component description.\n */\nexport const Button = ({\n  variant = 'text',\n  children,\n  cornerRadius = 4,\n  elevation = 2,\n  paperProps = {padding: [0, 8], margin: 2},\n  color = '#000',\n  role = 'button',\n  style,\n  size = 20,\n  type = 'button',\n  dense = false,\n  fullWidth = false,\n  iconFontFamily,\n  rippleStyle,\n  onLayout,\n  buttonRef,\n  theme,\n  containerStyle,\n  icon,\n  textProps,\n  transform = 'capitalize',\n  ...props\n}: ButtonProps) => {\n  const themeControl = useTheme(theme);\n  const isDefaultButton: boolean = role === 'button';\n  color =\n    color && color in themeControl.color\n      ? themeControl.color[color]\n      : color\n      ? color\n      : themeControl.color.primary;\n  let textColor =\n    !color && role === 'button'\n      ? themeControl.color.primary\n      : role !== 'button'\n      ? themeControl.color.primary\n      : Color(color).isDark()\n      ? variant === 'contained'\n        ? 'white'\n        : color\n      : color;\n  return (\n    <Ripple\n      rippleOpacity={Color(textColor).isDark() ? 0.4 : undefined}\n      style={[\n        rippleStyle,\n        {\n          margin: 4,\n          borderRadius: cornerRadius,\n          overflow: 'hidden',\n        },\n        buttonStyleGenerator(\n          isDefaultButton ? variant : role === 'fab' ? 'contained' : 'text',\n          variant === 'contained' ? color : textColor,\n        ),\n        variant === 'contained' && elevationShadowStyle(elevation),\n      ]}\n      rippleDuration={300}\n      rippleColor={\n        Color(variant !== 'contained' ? color : textColor).isDark()\n          ? Color(variant !== 'contained' ? color : textColor)\n              .lighten(0.7)\n              .rgb()\n              .toString()\n          : Color(variant !== 'contained' ? color : textColor)\n              .darken(0.2)\n              .toString()\n      }\n      {...props}>\n      <Animated.View\n        ref={buttonRef}\n        onLayout={onLayout}\n        style={[\n          {\n            borderRadius: !isDefaultButton\n              ? dense\n                ? size - 4\n                : size + 4\n              : cornerRadius,\n            overflow: 'hidden',\n          },\n          containerStyle,\n          !isDefaultButton && fullWidth === false\n            ? {alignSelf: 'flex-start'}\n            : {},\n        ]}>\n        <Surface\n          {...paperProps}\n          direction=\"row\"\n          justify={type === 'drawer' ? 'flex-start' : 'center'}\n          alignItems=\"center\"\n          alignContent=\"center\"\n          margin={[0, 8]}\n          padding={0}\n          style={StyleSheet.flatten([\n            style,\n            {\n              backgroundColor: 'transparent',\n              borderRadius: cornerRadius,\n              minHeight: 36,\n              // minWidth: 64,\n            },\n          ])}>\n          {icon && (\n            <Icon\n              name={icon}\n              color={\n                type === 'button' && variant === 'contained'\n                  ? Color(textColor).isDark()\n                    ? 'white'\n                    : textColor\n                  : textColor\n              }\n              family={iconFontFamily}\n              size={size - (dense ? 4 : 0)}\n              style={{\n                marginLeft: 8,\n              }}\n            />\n          )}\n          {role === 'button' && (\n            <>\n              {typeof children === 'string' ? (\n                <Text\n                  dense={dense}\n                  style={{\n                    textTransform: transform,\n                    textAlign: 'center',\n                    marginHorizontal: 8,\n                  }}\n                  weight=\"500\"\n                  variant=\"button\"\n                  {...textProps}\n                  contrast={1}\n                  color={\n                    type === 'button' && variant === 'contained'\n                      ? Color(textColor).isDark()\n                        ? 'white'\n                        : textColor\n                      : textColor\n                  }>\n                  {children}\n                </Text>\n              ) : (\n                children\n              )}\n            </>\n          )}\n        </Surface>\n      </Animated.View>\n    </Ripple>\n  );\n};\n\nconst buttonStyleGenerator = (variant: string, color: string) => {\n  let style: any = {};\n  switch (variant) {\n    case 'text':\n      style['backgroundColor'] = 'transparent';\n      style['elevation'] = 0;\n      style['shadowOpacity'] = 0;\n      break;\n    case 'outlined':\n      style['borderWidth'] = 1;\n      style['borderColor'] = Color(color)\n        .alpha(0.5)\n        .toString();\n      style['backgroundColor'] = 'transparent';\n      style['elevation'] = 0;\n      style['shadowOpacity'] = 0;\n      break;\n    case 'contained':\n      style['backgroundColor'] = color;\n      break;\n\n    default:\n      break;\n  }\n  return style;\n};\nButton.defaultProps = {\n  variant: 'text',\n  cornerRadius: 4,\n  elevation: 2,\n  paperProps: {padding: [0, 8], margin: 2},\n  role: 'button',\n  size: 20,\n  type: 'button',\n  dense: false,\n  fullWidth: false,\n  transform: 'capitalize',\n};\nButton.propTypes = {\n  iconFontFamily: propTypes.oneOf([\n    'material',\n    'materialCommunity',\n    'simpleLine',\n    'fa',\n    'fa5',\n    'fa5pro',\n    'foundation',\n    'evil',\n    'octicons',\n    'ionic',\n    'feather',\n    'entypo',\n    'zocial',\n  ]),\n  variant: propTypes.oneOf(['text', 'outlined', 'contained']),\n\n  /**\n   * Description of prop \"type\" (a custom validation function).\n   */\n  type: propTypes.oneOf(['button', 'drawer', 'dialog']),\n  role: propTypes.oneOf(['fab', 'icon', 'button']),\n  paperProps: propTypes.object,\n  color: propTypes.oneOfType([\n    propTypes.string,\n    propTypes.oneOf(['primary']),\n    propTypes.oneOf(['secondary']),\n  ]),\n  cornerRadius: propTypes.number,\n  elevation: propTypes.number,\n  size: propTypes.number,\n  dense: propTypes.bool,\n  fullWidth: propTypes.bool,\n  onLayout: propTypes.any,\n\n  /* bu kısımı sonrada düzenle*/\n  textProps: propTypes.any,\n  transform: propTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),\n  icon: propTypes.string,\n  theme: propTypes.object,\n  containerStyle: propTypes.any,\n  style: propTypes.any,\n  rippleStyle: propTypes.any,\n  buttonRef: propTypes.any,\n};\nexport default Button;\n"]}
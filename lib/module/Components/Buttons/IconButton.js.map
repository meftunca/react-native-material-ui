{"version":3,"sources":["IconButton.tsx"],"names":["React","Ripple","Surface","View","Icon","useTheme","IconButton","children","paperProps","padding","margin","color","role","style","size","iconFontFamily","backgroundColor","rippleStyle","onLayout","theme","contentContainerStyle","icon","props","themeControl","textColor","text","alignSelf","borderRadius","overflow","justifyContent","alignContent","alignItems","height","width","undefined"],"mappings":"sPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAkC,kBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoC,mBAApC,CACA,OAA8BC,IAA9B,KAAyC,cAAzC,CACA,MAAOC,CAAAA,IAAP,KAAmC,cAAnC,CAEA,OAAQC,QAAR,KAAuB,SAAvB,CAiBA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAexC,IAdJC,CAAAA,QAcI,MAdJA,QAcI,sBAbJC,UAaI,CAbJA,UAaI,0BAbS,CAACC,OAAO,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAV,CAAkBC,MAAM,CAAE,CAA1B,CAaT,iCAZJC,KAYI,CAZJA,KAYI,qBAZI,SAYJ,2BAXJC,IAWI,CAXJA,IAWI,oBAXG,QAWH,WAVJC,KAUI,MAVJA,KAUI,gBATJC,IASI,CATJA,IASI,oBATG,EASH,WARJC,cAQI,MARJA,cAQI,CAPJC,eAOI,MAPJA,eAOI,CANJC,WAMI,MANJA,WAMI,CALJC,QAKI,MALJA,QAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,qBAGI,MAHJA,qBAGI,CAFJC,IAEI,MAFJA,IAEI,CADDC,KACC,2LACJ,GAAMC,CAAAA,YAAiB,CAAGlB,QAAQ,CAACc,KAAD,CAAlC,CACA,GAAMK,CAAAA,SAAiB,CACrBb,KAAK,EAAIA,KAAK,GAAIY,CAAAA,YAAY,CAACZ,KAA/B,CACIY,YAAY,CAACZ,KAAb,CAAmBA,KAAnB,CADJ,CAEIA,KAAK,CACLA,KADK,CAELY,YAAY,CAACZ,KAAb,CAAmBc,IALzB,CAOA,MACE,qBAAC,IAAD,EACE,QAAQ,CAAEP,QADZ,CAGE,KAAK,CAAE,CACL,CACEQ,SAAS,CAAE,YADb,CAEEC,YAAY,CAAEb,IAAI,CAAG,CAFvB,CAGEc,QAAQ,CAAE,QAHZ,CADK,CAQLR,qBARK,CAHT,iDAaE,oBAAC,MAAD,aACME,KADN,EAEE,2BAA2B,CAAER,IAF/B,CAGE,KAAK,CAAE,CACLG,WADK,CAEL,CACEU,YAAY,CAAEb,IADhB,CAEEc,QAAQ,CAAE,QAFZ,CAGEnB,OAAO,CAAEG,IAAI,GAAK,MAAT,CAAkB,CAAlB,CAAsB,CAHjC,CAIEiB,cAAc,CAAE,QAJlB,CAKEC,YAAY,CAAE,QALhB,CAMEC,UAAU,CAAE,QANd,CAFK,CAHT,CAcE,WAAW,CAAEP,SAdf,kDAeE,oBAAC,OAAD,aACMhB,UADN,EAEE,SAAS,CAAC,KAFZ,CAGE,OAAO,CAAC,QAHV,CAIE,UAAU,CAAC,QAJb,CAKE,YAAY,CAAC,QALf,CAME,OAAO,CAAE,CANX,CAOE,MAAM,CAAE,CAPV,CAQE,KAAK,CAAE,CACLK,KADK,CAEL,CACEG,eAAe,CAAEA,eAAe,EAAI,aADtC,CAEEW,YAAY,CAAEb,IAAI,CAAG,CAFvB,CAGEkB,MAAM,CAAEpB,IAAI,GAAK,MAAT,CAAkBE,IAAlB,CAAyBA,IAAI,CAAG,IAH1C,CAIEmB,KAAK,CAAErB,IAAI,GAAK,MAAT,CAAkBE,IAAlB,CAAyBA,IAAI,CAAG,IAJzC,CAFK,CART,kDAiBGO,IAAI,GAAKa,SAAT,EACC,oBAAC,IAAD,EACE,IAAI,CAAEb,IADR,CAEE,KAAK,CAAEG,SAFT,CAGE,MAAM,CAAET,cAHV,CAIE,IAAI,CAAED,IAJR,iDAlBJ,CAfF,CAbF,CADF,CA0DD,CAlFD,CAoFA,cAAeR,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport Ripple, {RippleProps} from './../Core/Ripple';\nimport Surface, {SurfaceProps} from './../Core/Surface';\nimport {ViewStyle, StyleProp, View} from 'react-native';\nimport Icon, {IconFontFamily} from '../Core/Icon';\nimport Color from 'color';\nimport {useTheme} from 'Theming';\n\nexport interface IconButtonProps extends RippleProps {\n  iconFontFamily?: IconFontFamily;\n  role?: 'icon' | 'chip';\n  paperProps?: SurfaceProps;\n  color?: // | string\n  string | ('primary' | 'secondary' | 'accent' | 'error' | 'warning' | 'text');\n  backgroundColor?: string;\n  size?: number;\n  onLayout?: any; // bu kısımı sonrada düzenle\n  icon?: string;\n  theme?: object;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  rippleStyle?: StyleProp<ViewStyle>;\n}\nconst IconButton: React.FC<IconButtonProps> = ({\n  children,\n  paperProps = {padding: [4, 8], margin: 2},\n  color = 'primary',\n  role = 'button',\n  style,\n  size = 24,\n  iconFontFamily,\n  backgroundColor,\n  rippleStyle,\n  onLayout,\n  theme,\n  contentContainerStyle,\n  icon,\n  ...props\n}) => {\n  const themeControl: any = useTheme(theme);\n  const textColor: string =\n    color && color in themeControl.color\n      ? themeControl.color[color]\n      : color\n      ? color\n      : themeControl.color.text;\n\n  return (\n    <View\n      onLayout={onLayout}\n      // pointerEvents=\"box-none\"\n      style={[\n        {\n          alignSelf: 'flex-start',\n          borderRadius: size * 2,\n          overflow: 'hidden',\n          //   minHeight: dense ? 32 : 60,\n          //   minWidth: dense ? 32 : 60,\n        },\n        contentContainerStyle,\n      ]}>\n      <Ripple\n        {...props}\n        rippleContainerBorderRadius={size}\n        style={[\n          rippleStyle,\n          {\n            borderRadius: size,\n            overflow: 'hidden',\n            padding: role === 'chip' ? 0 : 4,\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n          },\n        ]}\n        rippleColor={textColor}>\n        <Surface\n          {...paperProps}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n          padding={0}\n          margin={0}\n          style={[\n            style,\n            {\n              backgroundColor: backgroundColor || 'transparent',\n              borderRadius: size * 2,\n              height: role === 'chip' ? size : size * 1.25,\n              width: role === 'chip' ? size : size * 1.25,\n            },\n          ]}>\n          {icon !== undefined && (\n            <Icon\n              name={icon}\n              color={textColor}\n              family={iconFontFamily}\n              size={size}\n            />\n          )}\n        </Surface>\n      </Ripple>\n    </View>\n  );\n};\n\nexport default IconButton;\n"]}
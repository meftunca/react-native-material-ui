{"version":3,"sources":["FAB.tsx"],"names":["React","Ripple","Surface","View","StyleSheet","Icon","Color","useTheme","Text","FAB","children","paperProps","padding","margin","color","label","style","dense","size","iconFontFamily","rippleStyle","labelProps","onLayout","theme","contentContainerStyle","icon","props","themeControl","fabColor","primary","foreColor","isDark","flatten","borderRadius","overflow","lighten","fade","toString","darken","backgroundColor","height","minWidth","undefined","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Ripple, {RippleProps} from '../Core/Ripple';\nimport Surface, {SurfaceProps} from '../Core/Surface';\nimport {ViewStyle, StyleProp, View, StyleSheet} from 'react-native';\nimport Icon, {IconFontFamily} from '../Core/Icon';\nimport Color from 'color';\nimport {useTheme} from '../../Theming';\nimport Text, {TextProps} from '../Core/Typography';\nexport interface FABProps extends RippleProps {\n  iconFontFamily?: IconFontFamily;\n  role?: 'fab' | 'icon' | 'button';\n  paperProps?: SurfaceProps;\n  color?: // | string\n  string | ('primary' | 'secondary' | 'accent' | 'error' | 'warning' | 'text');\n  size?: number;\n  onLayout?: any; // bu kısımı sonrada düzenle\n  icon?: string;\n  label?: string;\n  theme?: object;\n  dense?: boolean;\n  labelProps?: TextProps;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  rippleStyle?: StyleProp<ViewStyle>;\n}\nconst FAB: React.FC<FABProps> = ({\n  children,\n  paperProps = {padding: [4, 8], margin: 2},\n  color = 'primary',\n  label,\n  style,\n  dense,\n  size = 24,\n  iconFontFamily,\n  rippleStyle,\n  labelProps,\n  onLayout,\n  theme,\n  contentContainerStyle,\n  icon,\n  ...props\n}) => {\n  const themeControl: any = useTheme(theme);\n  let fabColor: string =\n      color && color in themeControl.color\n        ? themeControl.color[color]\n        : color\n        ? color\n        : themeControl.color.primary,\n    foreColor: string = Color(fabColor).isDark() ? 'white' : 'black';\n\n  return (\n    <View\n      onLayout={onLayout}\n      style={StyleSheet.flatten([\n        {\n          borderRadius: size * 2,\n          overflow: 'hidden',\n          margin: dense ? 8 : 16,\n          padding: 4,\n          //   minHeight: dense ? 32 : 60,\n          //   minWidth: dense ? 32 : 60,\n        },\n        contentContainerStyle,\n      ])}>\n      <Ripple\n        {...props}\n        rippleContainerBorderRadius={size}\n        style={StyleSheet.flatten([\n          rippleStyle,\n          {\n            borderRadius: size,\n            overflow: 'hidden',\n          },\n        ])}\n        rippleColor={\n          Color(fabColor).isDark()\n            ? Color(fabColor)\n                .lighten(0.7)\n                .fade(0.1)\n                .toString()\n            : Color(fabColor)\n                .darken(0.4)\n                .fade(0.1)\n                .toString()\n        }>\n        <Surface\n          {...paperProps}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n          padding={dense ? 8 : 16}\n          margin={0}\n          style={StyleSheet.flatten([\n            style,\n            {\n              backgroundColor: fabColor,\n              borderRadius: size * 2,\n              height: dense && label ? 48 : dense ? 40 : 56,\n              minWidth: dense ? 40 : 56,\n            },\n          ])}>\n          {icon !== undefined && (\n            <Icon\n              name={icon}\n              color={foreColor}\n              family={iconFontFamily}\n              size={size}\n              style={{\n                marginRight: label ? 12 : 0,\n              }}\n            />\n          )}\n          {label !== undefined && (\n            <Text\n              color={foreColor}\n              variant=\"button\"\n              transform=\"uppercase\"\n              {...labelProps}\n              style={StyleSheet.flatten([\n                labelProps?.style,\n                {\n                  marginRight: 20 - (dense ? 8 : 16),\n                },\n              ])}>\n              {label}\n            </Text>\n          )}\n        </Surface>\n      </Ripple>\n    </View>\n  );\n};\n\nexport default FAB;\n"]}